<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_door_badlands</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>obj_cell_parent</parentName>
  <maskName>spr_mask_iso64x32</maskName>
  <events>
    <event eventtype="4" ename="obj_gnoll">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///declare readiness to travel
lastcreated = instance_create(x,y,obj_ready_door);
lastcreated.target_a = id;
lastcreated.target_b = other;
if crnt_pnum = controlling_player{
  //crnt_dungeon.previous_chamber = crnt_dungeon.destined_chamber
  //crnt_dungeon.destined_chamber = ds_list_find_value(crnt_dungeon.chamber_list,other.destination);
  clearbuffer();
  writebyte(NEXT_CHAMBER);
  writebyte(crnt_pnum);
  writeint(other.destination);
  writeint(other.startlocation_id);
  writeint(random_get_seed());
  if (global.master){
      mu_destination[crnt_pnum] = other.destination;
      allclear = true; //check if everyone is on the platform
      for (i=0;i&lt;cjp;i+=1){
        //TO DO: replace the dumb collision detection thing with a real flag
        if (mu_hp[i] &gt; 0 &amp;&amp; mu_destination[i] != other.destination){
          allclear = false;
          break;
        }
      }
      writebyte(allclear);
      slave_sendall();
      if (allclear || cjp == 1){ //if allclear or singleplayer
        allclear = false;
        crnt_dungeon.destination_coordinates = other.startlocation_id;
        crnt_dungeon.destined_chamber = ds_list_find_value(crnt_dungeon.chamber_list,other.destination);
        with crnt_dungeon{event_user(1);}
        
        with crnt_dungeon{event_user(0);}

      }
    }else{
      //writeint(other.portal_id);
      //writeint(other.abstract.entrance_id);
      sendmessage(server);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Constructor
//sprite_index = abstract.chamber.dungeon.tileset.tileset_door;
sprite_index = crnt_dungeon.tileset.tileset_door;
image_speed = 0;
image_index = abstract.entrance_id;
depth = room_height - y;
var w,h,grid_w;
w = 9+2;
h = 9+2;
grid_w = 128;
destination = crnt_dungeon.destined_chamber.adjacent[abstract.entrance_id].list_index;
startlocation_id = (abstract.entrance_id + 2) mod 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
