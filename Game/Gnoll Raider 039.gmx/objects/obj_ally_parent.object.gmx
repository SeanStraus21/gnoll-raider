<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_npc_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Talk
//do checks

if (talking)
    {
    if (talk_i &lt; ds_list_size(dlg_log))
        {
        if (talk_j &lt;= string_length(ds_list_find_value(dlg_log,talk_i)))
            {
            talk_char = string_char_at(ds_list_find_value(dlg_log,talk_i),talk_j);
            if (talk_char != '@')
                {
                ds_list_replace(dlg_menu.display_log,talk_i,ds_list_find_value(dlg_menu.display_log,talk_i)+string(talk_char));
                sound_play(snd_typewriter);
                alarm[1] = talk_spd;
                talk_j += 1;
                }
            else //change talking speed with @ custom operator
                {
                talk_spd = real(string_char_at(ds_list_find_value(dlg_log,talk_i),talk_j+1));
                talk_j+=2;
                event_perform(ev_alarm,1);
                }
            }
        else
            {
            //handle drop to next line
            if ((talk_i+1) &lt; ds_list_size(dlg_log))
                {
                if (ds_list_find_value(dlg_log,talk_i+1) != "")//if this is not the last line in dlg_log
                    {
                    ds_list_add(dlg_menu.display_log,"");
                    if (ds_list_size(dlg_menu.display_log) &gt; dlg_menu.logwin_lnum*dlg_menu.log_page)
                        {
                        dlg_menu.log_ind += dlg_menu.logwin_lnum;
                        dlg_menu.log_page +=1;
                        }
                    }
                }
            talk_j = 0;
            talk_i += 1;
            event_perform(ev_alarm,1);
            }
        }
    else
        {
        //end talk animation, stop talking etc. etc.
        talking = false;
        talk_i = 0;
        talk_j = 0;
        if (dlg_over)
            {
            alarm[0] = 30;
            }
        with dlg_menu
            {
            line_count = 0;//there are no lines printed yet
            opt_ind = 0;
            for(j=0;(j+opt_ind)&lt;ds_list_size(target_npc.dlg_opts);j+=1) //j starts at 0, and moves up until
                {
                opt_text = (string(j+1)+". "+ds_list_find_value(target_npc.dlg_opts,j+opt_ind));//number the options
                opt_size = count_formatted_lines(opt_text,128*SV);//determine number of lines in text
                if (line_count+opt_size) &lt;= optwin_lnum //
                    {
                    lastcreated = instance_create(x+(72*SV),y+128*SV+(text_h*(line_count)),obj_menu_dlg_option)
                    lastcreated.creator = id;
                    lastcreated.key = opt_ind+j;
                    lastcreated.index = j;
                    lastcreated.text = opt_text;
                    lastcreated.size = opt_size;
                    ds_list_add(option_objects,lastcreated);
                    line_count += opt_size;
                    }
                else
                    {
                    break;
                    }
                }
            position_y = 0;
            hovered = ds_list_find_value(option_objects,0);
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Manage Dialogue
if(confirm_btn &amp;&amp; conversing){
  event_user(1);
  io_clear2();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set sprite stuff

if xprevious != x &amp;&amp; yprevious != y // if moving, have sprite move, else stop
    {
    if image_speed == 0
        {
        image_index += 1;
        image_speed = 0.25;
        }
    dir = point_direction(xprevious,yprevious,x,y)
    }
else
    {
    image_speed = 0;
    }
//align sprite to direction
switch ((dir+22.5) div 45)
    {
    case 0:
        sprite_index = sprEE[spr_ind];
        break;
        
    case 1:
        sprite_index = sprNE[spr_ind];
        break;
        
    case 2:
        sprite_index = sprNN[spr_ind];
        break;
        
    case 3:
        sprite_index = sprNW[spr_ind];
        break;
        
    case 4:
        sprite_index = sprWW[spr_ind];
        break;
        
    case 5:
        sprite_index = sprSW[spr_ind];
        break;
        
    case 6:
        sprite_index = sprSS[spr_ind];
        break;
        
    case 7:
        sprite_index = sprSE[spr_ind];
        break;
        
    case 8:
        sprite_index = sprEE[spr_ind];
        break;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
