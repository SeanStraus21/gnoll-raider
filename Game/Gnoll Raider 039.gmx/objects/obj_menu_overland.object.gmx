<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menu_overland</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>obj_menu_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize the map
location_list = ds_list_create();

dungeon_id[0] = obj_dungeon_dismalwaste;
dungeon_id[1] = obj_dungeon_boneyard;

lastcreated = instance_create(192,128,obj_menu_overland_dismalwaste);
lastcreated.root = id;
lastcreated.index = 0;
ds_list_add(location_list,lastcreated);

lastcreated = instance_create(64,128,obj_menu_overland_boneyard);
lastcreated.root = id;
lastcreated.index = 1;
ds_list_add(location_list,lastcreated);

hover_index = 0;
selected_index = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Process User Input
if(confirm_btn){
  event_user(1);
  io_clear2();
}else{
  if(arrow_right){
    hover_index = (hover_index+1)mod ds_list_size(location_list);
    io_clear2();
  }
  if(arrow_left){
    if (hover_index &gt; 0){
      hover_index -= 1;
    }else{
      hover_index = ds_list_size(location_list) -1;
    }
    io_clear2();
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Confirm Button Pressed
if(hover_index == selected_index){
  selected_index = -1;//deselect
  mu_portal[crnt_pnum] = -1;
  clearbuffer();
  writebyte(NEXT_ROOM);
  writebyte(crnt_pnum);
  writeint(-1); //send cancellation request
  writeint(global.startx);
  writeint(global.starty);
  writeint(-1);
  sendmessage(server);
  
}else{
  selected_index = hover_index;//select
}
if(selected_index &gt;=0){
  event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go To Room
var reserved_portal_id;
reserved_portal_id = selected_index;

if (global.master){
  //Build Potential Dungeon
  if instance_exists(crnt_dungeon){
    with crnt_dungeon{instance_destroy();}
  }
  crnt_dungeon = instance_create(0,0,dungeon_id[selected_index]);//create dungeon
}


//prepare packet
nextroom_id = 4; //ID of dungeon_room is 4
clearbuffer();
writebyte(NEXT_ROOM);
writebyte(crnt_pnum);
writeint(nextroom_id); //send destination
writeint(global.startx); //make sure players are in sync
writeint(global.starty);
if (global.master){
  mu_portal[crnt_pnum] = reserved_portal_id; 
  allclear = true; //check if everyone is ready
  for (i=0;i&lt;cjp;i+=1){
    //if any living players are not ready, all is not clear
    if (mu_hp[i] &gt; 0 &amp;&amp; mu_portal[i] == reserved_portal_id){
      allclear = false;
    }
  }
  writebyte(allclear);
  slave_sendall();
  if (allclear){
    //if allclear, reset stuff
    allclear = false;
    for(i=0;i&lt;cjp;i+=1){
      mu_portal[i] = -1;
    }
  }
  if (cjp == 1){
    roomprevious = room_id;
    room_id = nextroom_id;
    room_goto(room_index[room_id]);
  }
}else{
  writeint(reserved_portal_id);
  sendmessage(server);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///clean up lists
ds_list_destroy(location_list);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
