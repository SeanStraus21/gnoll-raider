<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_abl_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define Ability
title = "Life Support";
max_level = 1;

//graphics (icon)
icon = spr_charcrtbtn_skills;
image = 19;

//Text
tooltip[0] = "You and your trusty fibulator put Dr. Frankenstein to shame.";

description[0] = "You and your trusty fibulator put Dr. Frankenstein to shame.";

for(i=0i&lt;max_level;i+=1){
  //general stats
  base_cost[i] = 21-i; //base energy cost
  base_cd[i] = 15-i; //base cooldown in seconds
  
  //specific stats
  heal_percent[i] = 10+i*10; //percentage of the target's health that is restored on resurrection
  delay[i] = 5;//time in seconds before the spell takes effect
  range[i] = 96;//the distance at which the spell can be cast
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Slave Receive Life Support
target = readbyte();
pwr = readint();
cost = readint();
//create effect here
mu_hp[target] = (mu_mhp[target]*pwr)div(10);
if (mu_hp[target] &gt; mu_mhp[target]) {mu_hp[target]=mu_mhp[target];}
with pchar[target] {instance_destroy();}
pchar[target] = instance_create(mu_gravex[target],mu_gravey[target],obj_gnoll);
pchar[target].controlling_player=target;
pchar[target].sprite_index = sprSS[mu_spr[target]];
pchar[target].crnt_dir = 270;
mu_ep[sid] -= cost;
with (obj_grave){
  if (instance_nearest(x,y,obj_slavecontrol).target == controlling_player){
    instance_destroy();
  }
}
if (target == crnt_pnum){//if slave is the target
  main_unit = pchar[target];
  crnt_dir = 270;
  view_object[0] = main_unit;
}
if (sid == crnt_pnum){//if slave is original caster
  for(i=0;i&lt;4;i+=1){
      if (abl_slot[i] == 19){
        abl_cd[i] = 0;
        obj_control.alarm[i] = ds_list_find_value(skill_list,abl_index).base_cd[abl_lvl[i]];
        break;
    }
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Master Handle Life Support
target = readbyte();
pwr = readint();
cost = readint();
if (pchar[target].object_index == obj_ghost){
  //create effect here
  mu_hp[target] = (mu_mhp[target]*pwr)div(10);
  if (mu_hp[target] &gt; mu_mhp[target]) {mu_hp[target]=mu_mhp[target];}
  with pchar[target] {instance_destroy();}
  pchar[target] = instance_create(mu_gravex[target],mu_gravey[target],obj_gnoll);
  pchar[target].controlling_player=target;
  pchar[target].sprite_index = sprSS[mu_spr[target]];
  pchar[target].crnt_dir = 270;
  mu_ep[sid] -= cost;
  with (obj_grave){
    if (instance_nearest(x,y,obj_mastercontrol).target == controlling_player) {
      instance_destroy();
    }
  }
  if (target == crnt_pnum){//if master is the target
    //come back to life!
    main_unit = pchar[target];
    crnt_dir = 270
    view_object[0] = main_unit;
  }
  //Send to Slaves (anticipate trouble with mu_hp)
  clearbuffer();
  writebyte(MU_MAG);
  writebyte(sid);
  writebyte(abl_index);
  writebyte(target);
  writeint(pwr);
  writeint(cost);
  slave_sendall();
}else{
  lastcreated = instance_create(pchar[target].x,pchar[target].y,obj_fltext);
  lastcreated.text = "Hey, I'm not dead!";
  lastcreated.alarm[0] = 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cast Life Support
if (instance_exists(obj_grave)){
  if (mu_ep[crnt_pnum] &gt;= base_cost){
    target = instance_nearest(x,y,obj_grave).controlling_player;
    //if a grave is in range, channel
    if (distance_to_point(instance_nearest(x,y,obj_grave).x,instance_nearest(x,y,obj_grave).y) &lt;= base_rng){
      main_unit.channeling = true;
      lastcreated = instance_create(x,y,obj_skldummy_lifesupport);
      lastcreated.target = target;
      lastcreated.pwr = base_pwr;
      lastcreated.cost = base_cost;
      lastcreated.cd = base_cd;
      lastcreated.alarm[0] = base_dur;
    }else{
      lastcreated = instance_create(x,y-16,obj_fltext);
      lastcreated.text = "There aren't any dying people in reach...";
      lastcreated.alarm[0] = 30;
      lastcreated.target = pchar[crnt_pnum];
    }
  }else{
    lastcreated = instance_create(x,y-16,obj_fltext);
    lastcreated.text = "I'm too hungry to revive anybody...";
    lastcreated.alarm[0] = 30;
    lastcreated.target = pchar[crnt_pnum];
  }
}else{
  lastcreated = instance_create(x,y-16,obj_fltext);
  lastcreated.text = "I don't see any fallen comrades around here...";
  lastcreated.alarm[0] = 30;
  lastcreated.target = pchar[crnt_pnum];
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Generate Description

description = "Lather your weapons with a dangerous toxin. Enemies hit by your next attack will be poisoned and take " + string(damage[0]) + " damage every second for " +string(duration[0])+ " seconds.";

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
