<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_dungeon_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(load_phase == 1 &amp;&amp; !gangrene){
  gangrene = true;
  event_user(4);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///special arena stuff
//clear normal enemies from level
bob = instance_find(obj_abstract_cell,0);
bobx = bob.cell_x;
boby = bob.cell_y;
ds_list_destroy(destined_chamber.npc_list);
with (obj_abstract_npc){
  instance_destroy();
}
destined_chamber.npc_list = ds_list_create();
arena_foe = instance_create(0,0,obj_abstract_npc);
arena_foe.npc_type = arena_enemy;
arena_foe.npc_x = bobx;
arena_foe.npc_y = boby;
ds_list_add(destined_chamber.npc_list,arena_foe);

//Set Global Start Location
global.startx = (destined_chamber.startlocation_main.cell_x);
global.starty = (destined_chamber.startlocation_main.cell_y);
character_spawn(global.startx,global.starty);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
gangrene = false;
entering = false;
exiting = false;
load_phase = 0;
lc = 0;
transition_type = "room_to_chamber";
if (global.master){
  dungeon_seed = floor(random(32000));  
  clearbuffer();
  writebyte(SEED);
  writeint(dungeon_seed);
  writeint(object_index);
  slave_sendall();
}
random_set_seed(dungeon_seed);
tileset = instance_create(0,0,obj_tileset_dismalwaste);
chamber_list = ds_list_create();
door_list = ds_list_create();

//Enemy Type Lists
npc_type_list_ground_small = ds_list_create();
npc_type_list_ground_medium = ds_list_create();
npc_type_list_ground_large = ds_list_create();
npc_type_list_air_small = ds_list_create();
npc_type_list_air_medium = ds_list_create();
npc_type_list_air_large = ds_list_create();
ds_list_add(npc_type_list_ground_medium,obj_enemy_evileye);
ds_list_add(npc_type_list_ground_medium,obj_enemy_zombie);
ds_list_add(npc_type_list_ground_large,obj_enemy_cryptthing);
ds_list_add(npc_type_list_ground_large,obj_enemy_corruptknight);

//Chamber Schematics List
chamber_schematics_list = ds_list_create();
ds_list_add(chamber_schematics_list,arena_chamber);

//Generate Dungeon
maze_h = 1;
maze_w = 1;
generate_dungeon();

//Generate Initial Chamber

with destined_chamber{
  generate_chamber(0,0);
}

/*
//Set Global Start Location
global.startx = (destined_chamber.startlocation_main.cell_x);
global.starty = (destined_chamber.startlocation_main.cell_y);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create dungeon effects
//instance_create(0,0,obj_fadefilter_fog_grey);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
