<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-256</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start Menu
if (start_btn){
  if (!instance_exists(obj_menu_parent)){
    io_clear2();
    instance_create(view_xview,view_yview,obj_menu_start);
  }
}else if (toggle_btn){
  if (!instance_exists(obj_menu_parent)){
    abl_slot_set = (abl_slot_set + 1)mod 2;
    io_clear2();
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset npcid_index
npcid_index = 1;
allclear = false;
alarm[9] = 0;
alarm[10] = 0;
alarm[11] = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize room
//if global.restart == false

for (i=0;i&lt;cjp;i+=1){
  if (mu_hp[i] &gt; 0){
    pchar[i] = instance_create(0,0,obj_gnoll);
    pchar[i].sprite_index = sprSS[mu_spr[i]];
  }else{
    pchar[i] = instance_create(0,0,obj_ghost);
  }
  pchar[i].controlling_player = i;
  pchar[i].dir_move = 270;
  pchar[i].dir_face = 270;
}

character_spawn(global.startx,global.starty);
main_unit = pchar[crnt_pnum]
view_object[0] = main_unit

//  }
//else
//  {
//  room_restart()
//  }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///place headstones

for (i=0;i&lt;cjp;i+=1)
    {
    if ((mu_hp[i] &lt;= 0) &amp;&amp; (mu_graveroom[i] = room_id))
        {
        lastcreated = instance_create(mu_gravex[i],mu_gravey[i],obj_grave);
        lastcreated.controlling_player = i;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>instance_exists(obj_menu_parent)</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw UI Bar

draw_set_color(c_white);
draw_set_font(font2);

if (cjp &gt; 1){   //draw otherplayers stuff
  for(i=0;i&lt;cjp;i+=1){
    if (i &lt; crnt_pnum){
      draw_sprite(spricon[mu_spr[i]],mu_icon[i],view_xview+(32*i),view_yview);
      draw_text(view_xview+(34*i),view_yview+12,pname[i]);
      if (mu_hp[i] &gt; 0){
        draw_text(view_xview+2+(32*i),view_yview+20,("HP: " + string(mu_hp[i])));
        draw_text(view_xview+2+(32*i),view_yview+28,("EP: " + string(mu_ep[i])));
      }else{
        draw_set_color(c_gray);
        draw_text(view_xview+2+(32*i),view_yview+20,'Dead');
        draw_set_color(c_white);
      }
    }
    if (i &gt; crnt_pnum){
      draw_sprite(spricon[mu_spr[i]],mu_icon[i],view_xview+(32*(i-1)),view_yview);
      draw_text(view_xview+(34*(i-1)),view_yview+12,pname[(i)]);
      if (mu_hp[i] &gt; 0){
        draw_text(view_xview+2+(32*(i-1)),view_yview+20,("HP: " + string(mu_hp[i])));
        draw_text(view_xview+2+(32*(i-1)),view_yview+28,("EP: " + string(mu_ep[i])));
      }else{
        draw_set_color(c_gray);
        draw_text(view_xview+2+(32*(i-1)),view_yview+20,'Dead');
        draw_set_color(c_white);
      }
    }
  }
}
//draw current player's stuff
/*
draw_sprite(spricon[mu_spr[crnt_pnum]],mu_icon[crnt_pnum],view_xview+618,view_yview+624)
draw_text(view_xview+663,view_yview+603,(pname[crnt_pnum]))
draw_sprite(spr_coin_small_2,0,view_xview+630,view_yview+684)
draw_text(view_xview+642,view_yview+675,':' + string(gold))
draw_text(view_xview+678,view_yview+675,'Exp:' + string(lexp))
if mu_hp[crnt_pnum] &gt; 0
    {
    draw_text(view_xview+678,view_yview+627,("HP: " + string(mu_hp[crnt_pnum])))
    draw_text(view_xview+678,view_yview+651,("EP: " + string(mu_ep[crnt_pnum])))
    }
else
    {
    draw_set_color(c_gray)
    draw_text(view_xview+684,view_yview+648,'Dead')
    draw_set_color(c_white)
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Skillbar
var xpos,ypos;
xpos = view_xview[0];
ypos = view_yview[0]+624;

//draw_sprite(spr_uibar,0,xpos,ypos);

//draw character skill icons
for(i=0;i&lt;4;i+=1){
  if(abl_slot[i] &gt;= 0){//if a skill is assigned to this slot;
    crnt_abl = ds_list_find_value(ability_list,abl_slot[i]);
    //if energy cost is affordable, draw normally
    if (mu_ep[crnt_pnum] &gt;= crnt_abl.base_cost[abl_lvl[abl_slot[i]]]){//find value in (this list at (level-1=0)) this list is the list in abilityarray[i]at position 1
      draw_sprite(crnt_abl.icon,crnt_abl.image,xpos+12+54*i,ypos+24);
    }else{//else, tint blue to show lack of energy
      draw_sprite_ext(crnt_abl.icon,crnt_abl.image,xpos+12+54*i,ypos+24,1,1,0,c_blue,1);
    }//if on cooldown, draw mask and timer
    if (!abl_ready[abl_slot[i]]){
      draw_sprite(spr_iconmask,0,xpos+12+54*i,ypos+24);
      if(crnt_abl.alarm[0] &gt;= 0){
        draw_text(xpos+32+(54*i),ypos+32,string((crnt_abl.alarm[0] div room_speed)+1));
      }
    }
  }
}
//draw basic skills icons
for (i=0;i&lt;2;i+=1){
  draw_sprite(spr_gnollskills,i*2,xpos+306+i*54,ypos+24);
}

   
if (main_unit.object_index == obj_gnoll){//if main unit is alive (capable of sneaking and sprinting)
  //draw stealth icon, with mask for unusable, and cooldown if going 
  if(pchar[crnt_pnum].alarm[4] &gt;= 0){ //if stealth is on cooldown
    draw_sprite(spr_iconmask,0,xpos+360,ypos+24);//draw mask over sneak icon
    draw_text(xpos+360,ypos+21,string((pchar[crnt_pnum].alarm[4] div room_speed)+1));//draw cooldown time in seconds
  }
  if (instance_exists(obj_dummy_sneak) &amp;&amp; pchar[crnt_pnum].alarm[4] &lt; 0){
    draw_sprite(spr_selection_48x48,2,xpos+360,ypos+24);
  }
  //draw mask and cooldown for sprint if neccessary
  if(pchar[crnt_pnum].alarm[3] &gt;= 0){ //if sprint is on cooldown
    draw_sprite(spr_iconmask,0,xpos+306,ypos+24);//draw mask over sprint icon
    draw_text(xpos+306,ypos+21,string((pchar[crnt_pnum].alarm[3] div room_speed)+1));//draw cooldown time in seconds
  }
  var crnt_instance, flag;
  flag = false;
  for(i=0;i&lt;instance_number(obj_dummy_sprint);i+=1){
    crnt_instance = instance_find(obj_dummy_sprint,i);
    flag = (crnt_instance.target == pchar[crnt_pnum]);
    if(flag){
      draw_sprite(spr_selection_48x48,2,xpos+306,ypos+24);
      break;
    }
  }
}



//Draw Hotkeys
if(control_type){//true = controller, false = keyboard
  i = 0;
  //abilities
  draw_text(xpos+8+48*i,ypos+64,"Right");i+=1;
  draw_text(xpos+8+48*i,ypos+64,"Up");i+=1;
  draw_text(xpos+8+48*i,ypos+64,"Left");i+=1;
  draw_text(xpos+8+48*i,ypos+64,"Down");i+=1;
  //other
  draw_text(xpos+128+48*i,ypos+64,"Right Shoulder");i+=1;
  draw_text(xpos+128+48*i,ypos+64,"Right Trigger");i+=1;
  draw_text(xpos+128+48*i,ypos+64,"Left Shoulder");i+=1;
  draw_text(xpos+128+48*i,ypos+64,"Left Trigger");i+=1;
}else{
  i = 0;
  //abilities
  draw_text_ext(xpos+8+48*i,ypos+64,"Space + Q",12,48);i+=1;
  draw_text_ext(xpos+8+48*i,ypos+64,"Space + W",12,48);i+=1;
  draw_text_ext(xpos+8+48*i,ypos+64,"Space + E",12,48);i+=1;
  draw_text_ext(xpos+8+48*i,ypos+64,"Space + R",12,48);i+=1;
  //other
  draw_text(xpos+128+48*i,ypos+64,"Alt + Q");i+=1;
  draw_text(xpos+128+48*i,ypos+64,"Alt + W");i+=1;
  draw_text(xpos+128+48*i,ypos+64,"Alt + E");i+=1;
  draw_text(xpos+128+48*i,ypos+64,"Alt + R");i+=1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug

/*
draw_set_font(font0);
draw_set_color(c_white);
if global.master == true
    {
  draw_text(view_xview[0],view_yview[0]+48,string(instance_number(obj_ramp_NE)))
  if (instance_number(obj_ramp_NE)&gt;0){
  draw_text(view_xview[0],view_yview[0]+96,string(instance_find(obj_ramp_NE,0).x))
  draw_text(view_xview[0],view_yview[0]+96,string(instance_find(obj_ramp_NE,0).y))
  }
    //draw_text(view_xview[0],view_yview[0]+64,string(pchar[1].object_index))
    //draw_text(view_xview[0],view_yview[0]+80,string(collision_rectangle(pchar[0].x,pchar[0].y,pchar[0].x+16,pchar[0].y+32,obj_escape_00,true,false)))
    //draw_text(view_xview[0],view_yview[0]+96,string(collision_rectangle(pchar[1].x,pchar[1].y,pchar[1].x+16,pchar[1].y+32,obj_escape_00,true,false)))
    //draw_text(view_xview[0],view_yview[0]+48,string(allclear))
    }
    

/*
if instance_exists(obj_candummy)
    {
    draw_text(view_xview[0]+64,view_yview[0]+64,string(instance_number(obj_candummy)) + 'objects exist.')
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(obj_menu_parent)){
  draw_HUD();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
