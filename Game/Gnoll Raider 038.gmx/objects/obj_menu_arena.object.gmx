<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menu_charcrt</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>obj_menu_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set variables
//globalvar arena_chamber, arena_enemy;



active_submenu = id;

btn_labels[0] = "Select Character";
btn_labels[1] = "Select Arena";
btn_labels[2] = "Select Opponent";
btn_labels[3] = "Begin the Battle!";
btn_labels[4] = "Run Awaaay!";


arena_chambers = ds_list_create();
ds_list_add(arena_chambers,generate_chamber_01);
ds_list_add(arena_chambers,generate_chamber_02);
ds_list_add(arena_chambers,generate_chamber_03);
ds_list_add(arena_chambers,generate_chamber_04);
ds_list_add(arena_chambers,generate_chamber_05);
chamber_name[0] = "Chamber 1";
chamber_name[1] = "Chamber 2";
chamber_name[2] = "Chamber 3";
chamber_name[3] = "Chamber 4";
chamber_name[4] = "Chamber 5";

arena_enemies = ds_list_create();
ds_list_add(arena_enemies,obj_enemy_evileye);
enemy_name[0] = "Evil Eye";
enemy_name[1] = "Rakasha Warrior";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Submenus
active_submenu = id;
draw_set_font(font0);
//create main submenu
main = create_submenu(64,96,5,1,spr_btn_96x32,spr_selection_96x32,96,32,0,0,false);
for(i = 0; i &lt; main.w; i+=1){
  main.btn[i,0].text = btn_labels[i];
}
//create level_select submenu
level_submenu = create_submenu(96,192,1,5,spr_gameslot,spr_selection_96x32,96,64,0,0,true);

//create opponent_select submenu
opponent_submenu = create_submenu(224,192,1,5,spr_gameslot,spr_selection_96x32,96,64,0,0,true);

if instance_exists(obj_storage){
  storage = instance_find(obj_storage,0);
  level_submenu.line_index = storage.arena_level_line_index;
  level_submenu.hovered = level_submenu.btn[0,storage.arena_level_btn_index];
  opponent_submenu.line_index = storage.arena_opponent_line_index;
  opponent_submenu.hovered = opponent_submenu.btn[0,storage.arena_opponent_btn_index];
}
with(level_submenu){event_user(1);}
with(opponent_submenu){event_user(1);}
//refresh menus
event_user(14);
selected_level = arena_chambers[| level_submenu.selected.btn_index + level_submenu.line_index];
selected_opponent = arena_enemies[| opponent_submenu.selected.btn_index + opponent_submenu.line_index];
//set active submenu
active_submenu = main;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(arena_enemies);
ds_list_destroy(arena_chambers);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Process Input
if(confirm_btn){//press enter
  event_user(0);
  io_clear2();
}
if(cancel_btn){//press enter
  event_user(1);
  io_clear2();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Return From Popup Window
switch(return_from){
case 0:
  break;
case 1:
  game_end();
  break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update gameslots
var btn;
for(i=0;i&lt;level_submenu.h;i+=1){
  btn = level_submenu.btn[0,i];
  if(i+level_submenu.line_index &lt; ds_list_size(arena_chambers)){
    btn.empty = false;
    btn.text = "chamber "+ chamber_name[i+level_submenu.line_index];
  }else{
    btn.empty = true;
  }
}
for(i=0;i&lt;opponent_submenu.h;i+=1){
  btn = opponent_submenu.btn[0,i];
  if(i+opponent_submenu.line_index &lt; ds_list_size(arena_enemies)){
    btn.empty = false;
    btn.text = enemy_name[i+opponent_submenu.line_index];
  }else{
    btn.empty = true;
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Generate Dungeon
crnt_dungeon = instance_create(0,0,obj_dungeon_arena);

crnt_dungeon.arena_chamber = selected_level;
crnt_dungeon.arena_enemy = selected_opponent;

with(crnt_dungeon){
  event_user(3);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cancel Button Pressed
switch(active_submenu){
case(main):
  instance_destroy();
  break;
case(level_submenu):
  active_submenu = main;
  break;
case(opponent_submenu):
  active_submenu = main;
  break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///start, quit, choose opponent, choose level, choose character
switch(active_submenu){
case(main):
  switch(active_submenu.hovered.btn_index){
  case 0: //Select Character
    global.roomprevious = room;
    if(!instance_exists(obj_storage)){
      storage = instance_create(0,0,obj_storage);
      storage.arena_opponent_line_index = opponent_submenu.line_index;
      storage.arena_opponent_btn_index = opponent_submenu.selected.btn_index;
      storage.arena_level_line_index = level_submenu.line_index;
      storage.arena_level_btn_index = level_submenu.selected.btn_index;
    }
    instance_destroy();
    room_goto(room_charactermain);
    break;
  case 1: //Select Arena
    active_submenu = level_submenu;
    break;
  case 2: //Select Opponent
    active_submenu = opponent_submenu;
    break;
  case 3: //Fight
    sound_play(snd_click);
    event_user(2);
    with(obj_storage){instance_destroy();}
    instance_destroy();
    instance_create(0,0,obj_control);
    room_goto(room_dungeonroom);
    break;
  case 4: //Flee
    sound_play(snd_click);
    with(obj_storage){instance_destroy();}
    nextroom_id = 4;
    instance_destroy();
    room_goto(room_multiplayermenu);
    break;
  }
  break;
case(level_submenu):
  selected_level = arena_chambers[| level_submenu.hovered.btn_index + level_submenu.line_index];
  with(active_submenu){event_user(1)}
  active_submenu = main;
  break;
case(opponent_submenu):
  selected_opponent = arena_enemies[| opponent_submenu.hovered.btn_index + opponent_submenu.line_index];
  with(active_submenu){event_user(1)}
  active_submenu = main;
  break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///close connection and free dll

network_destroy(temp_socket);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
