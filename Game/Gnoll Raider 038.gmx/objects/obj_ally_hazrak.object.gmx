<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_witchdoctor_SS</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>obj_ally_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialization
npcid = npc_create();

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Declare Dialogue Variables
npc_dialogue[0] = "What is it?@5 @2Need an amputation?@5 @2 Excorcism?";
npc_dialogue[1] = "The one and only.@5 @2What was your first clue?@5 @2The giant headdress@5 @2or the mystical aura hovering about?";
npc_dialogue[2] = "Well if you ever get disemboweled or anything,@5 @2you know where to find me.";
npc_dialogue[3] = "Sure,@5 @2whatever,@5 @2come bask in the wisdom of the Great Witchdoctor and all that...";
npc_dialogue[4] = "You mean,@5 @2like,@5 @2besides being the clan's sole mediator with the spirit world,@4 @2chief healer,@4 @2and universal sage and advisor to the clan chieftains?@6 @2Mostly I play poker and go for relaxing strolls through the jungle.@5 @2Happy?";
npc_dialogue[5] = "Heh heh,@4 @2excellent,@4 @2just step over to my operating table for a moment@5...@2 heh,@4 @2nothing but a scratch!@5 @2Now,@4 @2was there anything else you wanted?";
npc_dialogue[6] = "Alright,@4 @2but don't blame me if you suddenly drop dead from some malicious secondary infection.";
npc_dialogue[7] = "Sure,@4 @2why not?@5 @2Lets see@6...@3 I see... I see... @1*gasp!*@5 @1a dire medical predicament!@3 @1In five minutes!@3 @1Quick!@3 @1Give me 20 gold right now and I might just be in time to remove the tumor@2!";
npc_dialogue[8] = "Yeah? Well here's a newsflash for ya: I ain't some crumby fortune teller, bub, I'm a witchdoctor. Get it straight! Gosh! Kids these days...";
npc_dialogue[9] = "Sure!@5 @2You can be my new apprentice. You start immediately.";
npc_dialogue[10] = "Basically, you do whatever I tell you to do, while I sit around and enjoy the money I don't have to pay you. Simple enough?";
npc_dialogue[11] = "What? Don't you trust me? *Evil Grin*";
npc_dialogue[12] = "No.";
npc_dialogue[13] = "Sure, whatever, just keep em coming squirt.";
npc_dialogue[14] = "Alrighty then, fork over the cash and lets get to cuttin.";
npc_dialogue[15] = "Tsk tsk, maybe you should think a little harder the next time you want to ask a stupid question, eh sonny?";

pc_dialogue[0] = "Are you the witchdoctor?";
pc_dialogue[1] = "Actually, I could use some medical attention.";
pc_dialogue[2] = "Er, I'm a little short on cash right now...";
pc_dialogue[3] = "Alright, here you go. [Shell out " +string(2)+ " gold]";
pc_dialogue[4] = "I'd better be going now.";
pc_dialogue[5] = "Do you mind if I ask you a few questions?";
pc_dialogue[6] = "What exactly do you do here?";
pc_dialogue[7] = "Will you tell me my future?";
pc_dialogue[8] = "SAVE ME WITCHDOCTOR!!! [Thrust 20 gold coins upon the witchdoctor]";
pc_dialogue[9] = "Hey! I asked you to tell me my future, not con me out of my life savings!";
pc_dialogue[10] = "Can you teach me to talk to spirits?";
pc_dialogue[11] = "Would you ever consider healing me for free?";
pc_dialogue[12] = "What do I have to do?";
pc_dialogue[13] = "Are you serious?";
pc_dialogue[14] = "Er, nevermind."
pc_dialogue[15] = "I'd like to ask you something else."
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set variables
npc_name = "Hazrak"
conversing = false;
talking = false;

dlg_log = ds_list_create();
dlg_opts = ds_list_create();
dlg_opt_ids = ds_list_create();
hitpoints = 5;
spd = 3;
dir = 270;
npcdef = 1;
npcdefmod = 0;
knockable = true;
snared = false;
stunned = false;
stealthed = false;

//graphics
spr_ind = 8;
portrait = spr_npcportrait_hazrak;
portrait_emotion = 0;
frame_num = 2;
portrait_ind = 0;
image_speed = 0;
theme_song = snd_theme_hazrak;

//conversation
dlg_over = false;
talk_i = 0;
talk_j = 0;
talk_spd = 2;
talk_char = '';
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///clean up dialogue
sound_stop(theme_song);
sound_loop(snd_lair);
end_dialogue(id,dlg_menu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dialogue Click
//Check if this NPC is in a conversation

if (dlg_menu.position_x == 0) &amp;&amp; (talking == false) &amp;&amp; !(dlg_over)
    {
    talking = true;
    ds_list_clear(dlg_menu.display_log);
    ds_list_add(dlg_menu.display_log,"");
    dlg_menu.log_ind = 0;
    dlg_menu.log_page = 1;
    switch(ds_list_find_value(dlg_opt_ids,dlg_menu.hovered.key)){
    case 0:
      //respond
      dlg_log = dialogue_log_append(npc_dialogue[1]);
      //determine new options
      ds_list_clear(dlg_opts);
      if mu_hp[crnt_pnum] &lt; mu_mhp[crnt_pnum] {ds_list_add(dlg_opts,pc_dialogue[1]);}
      ds_list_add(dlg_opts,pc_dialogue[6]);
      ds_list_add(dlg_opts,pc_dialogue[7]);
      ds_list_add(dlg_opts,pc_dialogue[10]);
      ds_list_add(dlg_opts,pc_dialogue[11]);
      ds_list_add(dlg_opts,pc_dialogue[4]);
      ds_list_clear(dlg_opt_ids);
      if mu_hp[crnt_pnum] &lt; mu_mhp[crnt_pnum] {ds_list_add(dlg_opt_ids,1);}
      ds_list_add(dlg_opt_ids,6);
      ds_list_add(dlg_opt_ids,7);
      ds_list_add(dlg_opt_ids,10);
      ds_list_add(dlg_opt_ids,11);
      ds_list_add(dlg_opt_ids,4);
      break;
    
    case 1:
        //respond
        dlg_log = dialogue_log_append(npc_dialogue[14]);
        //determine new options
        ds_list_clear(dlg_opts);
        ds_list_add(dlg_opts,pc_dialogue[2]);
        if (gold&gt;=2 &amp;&amp;(mu_mhp[crnt_pnum]&gt;mu_hp[crnt_pnum])){ds_list_add(dlg_opts,pc_dialogue[3]);}
        ds_list_clear(dlg_opt_ids);
        ds_list_add(dlg_opt_ids,2);
        if (gold&gt;=2 &amp;&amp;(mu_mhp[crnt_pnum]&gt;mu_hp[crnt_pnum])){ds_list_add(dlg_opt_ids,3);}
        break;
    
    case 2:
        //respond
        dlg_log = dialogue_log_append(npc_dialogue[6]);
        //end dialogue
        ds_list_clear(dlg_opts);
        if (mu_hp[crnt_pnum]&lt;mu_mhp[crnt_pnum]){ds_list_add(dlg_opts,pc_dialogue[1]);}
        ds_list_add(dlg_opts,pc_dialogue[5]);
        ds_list_add(dlg_opts,pc_dialogue[4]);
        //assign retrieval keys
        ds_list_clear(dlg_opt_ids);
        if (mu_hp[crnt_pnum]&lt;mu_mhp[crnt_pnum]){ds_list_add(dlg_opt_ids,1);}
        ds_list_add(dlg_opt_ids,5);
        ds_list_add(dlg_opt_ids,4);
        break;
    
    case 3:
        //siphon gold
        gold -= 2;
        mu_hp[crnt_pnum] = mu_mhp[crnt_pnum];
        //respond
        dlg_log = dialogue_log_append(npc_dialogue[5]);
        //determine new options
        ds_list_clear(dlg_opts);
        ds_list_add(dlg_opts,pc_dialogue[5]);
        ds_list_add(dlg_opts,pc_dialogue[4]);
        ds_list_clear(dlg_opt_ids);
        ds_list_add(dlg_opt_ids,5);
        ds_list_add(dlg_opt_ids,4);
        break;
    
    case 4:
        //respond
        dlg_log = dialogue_log_append(npc_dialogue[2]);
        //determine new options
        ds_list_clear(dlg_opts);
        dlg_over = true;
        sound_fade(snd_theme_hazrak,0,40);
        break;
    
    case 5:
        //respond
        dlg_log = dialogue_log_append(npc_dialogue[3]);
        //determine new options
        ds_list_clear(dlg_opts);
        ds_list_add(dlg_opts,pc_dialogue[6]);
        ds_list_add(dlg_opts,pc_dialogue[7]);
        ds_list_add(dlg_opts,pc_dialogue[10]);
        ds_list_add(dlg_opts,pc_dialogue[11]);
        ds_list_clear(dlg_opt_ids);
        ds_list_add(dlg_opt_ids,6);
        ds_list_add(dlg_opt_ids,7);
        ds_list_add(dlg_opt_ids,10);
        ds_list_add(dlg_opt_ids,11);
        break;
        
    case 6:
        //respond
        dlg_log = dialogue_log_append(npc_dialogue[4]);
        //determine new options
        ds_list_clear(dlg_opts);
        if (mu_hp[crnt_pnum]&lt;mu_mhp[crnt_pnum]){ds_list_add(dlg_opts,pc_dialogue[1]);}
        ds_list_add(dlg_opts,pc_dialogue[4]);
        ds_list_add(dlg_opts,pc_dialogue[15]);
        ds_list_clear(dlg_opt_ids);
        if (mu_hp[crnt_pnum]&lt;mu_mhp[crnt_pnum]){ds_list_add(dlg_opt_ids,1);}
        ds_list_add(dlg_opt_ids,4);
        ds_list_add(dlg_opt_ids,15);
        break;
        
    case 7:
        //respond
        dlg_log = dialogue_log_append(npc_dialogue[7]);
        //determine new options
        ds_list_clear(dlg_opts);
        if (gold&gt;=20){ds_list_add(dlg_opts,pc_dialogue[8]);}
        ds_list_add(dlg_opts,pc_dialogue[9]);
        ds_list_clear(dlg_opt_ids);
        if (gold&gt;=20){ds_list_add(dlg_opt_ids,8);}
        ds_list_add(dlg_opt_ids,9);
        break;
        
    case 8:
        //respond
        dlg_log = dialogue_log_append(npc_dialogue[5]);
        //determine new options
        ds_list_clear(dlg_opts);
        ds_list_add(dlg_opts,pc_dialogue[5]);
        ds_list_add(dlg_opts,pc_dialogue[4]);
        ds_list_clear(dlg_opt_ids);
        ds_list_add(dlg_opt_ids,5);
        ds_list_add(dlg_opt_ids,4);
        break;
        
    case 9:
        //respond
        dlg_log = dialogue_log_append(npc_dialogue[8]);
        //determine new options
        ds_list_clear(dlg_opts);
        if (mu_hp[crnt_pnum]&lt;mu_mhp[crnt_pnum]){ds_list_add(dlg_opts,pc_dialogue[1]);}
        ds_list_add(dlg_opts,pc_dialogue[15]);
        ds_list_add(dlg_opts,pc_dialogue[4]);
        ds_list_clear(dlg_opt_ids);
        if (mu_hp[crnt_pnum]&lt;mu_mhp[crnt_pnum]){ds_list_add(dlg_opt_ids,1);}
        ds_list_add(dlg_opt_ids,15);
        ds_list_add(dlg_opt_ids,4);
        break;
        
    case 10:
        //respond
        dlg_log = dialogue_log_append(npc_dialogue[9]);
        //determine new options
        ds_list_clear(dlg_opts);
        ds_list_add(dlg_opts,pc_dialogue[12]);
        ds_list_add(dlg_opts,pc_dialogue[13]);
        ds_list_clear(dlg_opt_ids);
        ds_list_add(dlg_opt_ids,12);
        ds_list_add(dlg_opt_ids,13);
        break;
        
    case 11:
        //respond
        dlg_log = dialogue_log_append(npc_dialogue[12]);
        //determine new options
        ds_list_clear(dlg_opts);
        ds_list_add(dlg_opts,pc_dialogue[15]);
        ds_list_add(dlg_opts,pc_dialogue[4]);
        ds_list_clear(dlg_opt_ids);
        ds_list_add(dlg_opt_ids,15);
        ds_list_add(dlg_opt_ids,4);
        break;
        
    case 12:
        //respond
        dlg_log = dialogue_log_append(npc_dialogue[10]);
        //determine new options
        ds_list_clear(dlg_opts);
        ds_list_add(dlg_opts,pc_dialogue[14]);
        ds_list_clear(dlg_opt_ids);
        ds_list_add(dlg_opt_ids,14);
        break;
        
    case 13:
        //respond
        dlg_log = dialogue_log_append(npc_dialogue[11]);
        //determine new options
        ds_list_clear(dlg_opts);
        ds_list_add(dlg_opts,pc_dialogue[12]);
        ds_list_add(dlg_opts,pc_dialogue[14]);
        ds_list_clear(dlg_opt_ids);
        ds_list_add(dlg_opt_ids,12);
        ds_list_add(dlg_opt_ids,14);
        break;
        
    case 14:
        //respond
        dlg_log = dialogue_log_append(npc_dialogue[15]);
        //determine new options
        ds_list_clear(dlg_opts);
        ds_list_add(dlg_opts,pc_dialogue[6]);
        ds_list_add(dlg_opts,pc_dialogue[7]);
        ds_list_add(dlg_opts,pc_dialogue[11]);
        ds_list_clear(dlg_opt_ids);
        ds_list_add(dlg_opt_ids,6);
        ds_list_add(dlg_opt_ids,7);
        ds_list_add(dlg_opt_ids,11);
        break;
        
    case 15:
        //respond
        dlg_log = dialogue_log_append(npc_dialogue[13]);
        //determine new options
        ds_list_clear(dlg_opts);
        ds_list_add(dlg_opts,pc_dialogue[6]);
        ds_list_add(dlg_opts,pc_dialogue[7]);
        ds_list_add(dlg_opts,pc_dialogue[10]);
        ds_list_add(dlg_opts,pc_dialogue[11]);
        ds_list_add(dlg_opts,pc_dialogue[4]);
        ds_list_clear(dlg_opt_ids);
        ds_list_add(dlg_opt_ids,6);
        ds_list_add(dlg_opt_ids,7);
        ds_list_add(dlg_opt_ids,10);
        ds_list_add(dlg_opt_ids,11);
        ds_list_add(dlg_opt_ids,4);
        break;
    }
    log_pcount = (ds_list_size(dlg_log) div dlg_menu.logwin_lnum) + ((ds_list_size(dlg_log) mod dlg_menu.logwin_lnum) &gt;0);
    alarm[1] = talk_spd;
    with (dlg_menu){
      ds_list_clear(option_objects);
      with (obj_menu_dlg_option){
        instance_destroy();
      }
    }
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start Conversation

//play theme song
sound_stop(snd_lair);
sound_loop(theme_song);

//look at speaker
dir = point_direction(x,y,ds_list_find_value(dlg_menu.participants,0).x,ds_list_find_value(dlg_menu.participants,0).y);

//determine opening phrase
ds_list_copy(dlg_log,dialogue_log_append(npc_dialogue[0]));
log_pcount = (ds_list_size(dlg_log) div dlg_menu.logwin_lnum) + ((ds_list_size(dlg_log) mod dlg_menu.logwin_lnum) &gt;0);
//determine starting options
ds_list_clear(dlg_opts);
ds_list_add(dlg_opts,pc_dialogue[0]);
if (mu_hp[crnt_pnum]&lt;mu_mhp[crnt_pnum]){ds_list_add(dlg_opts,pc_dialogue[1]);}
ds_list_add(dlg_opts,pc_dialogue[5]);
ds_list_add(dlg_opts,pc_dialogue[4]);
//assign retrieval keys
ds_list_clear(dlg_opt_ids);
ds_list_add(dlg_opt_ids,0);
if (mu_hp[crnt_pnum]&lt;mu_mhp[crnt_pnum]){ds_list_add(dlg_opt_ids,1);}
ds_list_add(dlg_opt_ids,5);
ds_list_add(dlg_opt_ids,4);

talking = true;
ds_list_clear(dlg_menu.display_log);
ds_list_add(dlg_menu.display_log,"");
alarm[1] = talk_spd;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
