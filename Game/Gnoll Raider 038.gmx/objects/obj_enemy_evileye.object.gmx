<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_evileye_SS</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_parent</parentName>
  <maskName>spr_mask_iso32x16</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///npc_create &amp; define variables
npcid = npc_create();
rewardnum = 1
rewardtype[0] = 5
rewardindex[0] = 1
corpse = 1
baseexp = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set variables
z = 0;
w = 64;
h = 32;
d = 64;

//hitbox
hitbox = instance_create(x,y,obj_hitbox);
hitbox.target = id;
hitbox.sprite_index = spr_hitbox_48x64;
ground = noone;

//vital statistics
hitpoints = 3;
mhp = 3;
spd = 3;
dmg = 3;
npcdef = 1;
npcdefmod = 0;

//attack settings
atk_cd = 60;
atk_ready = true;
atk_dur = 5;
atk_range = 128;
//ability settings
npc_abl_cd = 300;
npc_abl_ready = true;
npc_abl_dur = 8;
npc_abl_range = 128;

channel_timer = -1;
action_index = -1;

//AI state
behavior = 0;
target = noone;
acq_range = 512; //acquisition range

//bools

knockable = true;
channeling = false;
snared = false;
stunned = false;
sneaking = false;

//position and direction
dir_face = 270;
dir_move = 270;
z = 0;
xspd = 0;
yspd = 0;
zspd = 0;

//graphics
spr_ind = 10;
image_speed = 0.25;

//set aggro
for (i=0;i&lt;cjp;i+=1){
  aggro[i] = 0;
  recent_dmg[i] = 0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///remove stun
stunned = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///remove snare
snared = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stop channeling
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ability cooldown (paralysis wave)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///attack cooldown
atk_ready = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Artificial Intelligence Script

var enemy_detected, dest_x, dest_y, interrupted;
interrupted = false;

switch (behavior){
case 0: //idle
  //wander or stand still
  //check for enemies
  enemy_detected = false;
  for (i=0;i&lt;cjp;i+=1){
    //
    if (point_distance(x,y,pchar[i].x,pchar[i].y) &lt;= acq_range &amp;&amp; (mu_hp[i]&gt;0)){
      if (!collision_line(x,y,pchar[i].x,pchar[i].y,obj_pathingblocker_parent,false,true)){
        if (!pchar[i].sneaking || detect_stealth(pchar[i])){
          //aggro = personal aggro + relative hp + relative nearness + damage dealt
          aggro[i] = (pchar[i].aggro + 100*(1 - (mu_hp[i] div mu_mhp[i])) + 100*(1-(point_distance(x,y,pchar[i].x,pchar[i].y) div acq_range)) + 100*(1-(recent_dmg[i] div (mhp-hitpoints+1))));
          enemy_detected = true;
        }else{
          aggro[i] = 0;
        }
      }else{
        aggro[i] = 0;
      }
    }else{
      aggro[i] = 0;
    }
  }
  if (enemy_detected){
    /*
    highest_aggro = 0;
    for (i=0;i&lt;cjp;i+=1){
      if (aggro[i] &gt; highest_aggro){
        highest_aggro = aggro[i];
        target = pchar[i];
      }
    }
    */
    behavior = 1;
  }else{
    //wander,look around,nothing
  }
  break;
case 1: //combat
  //determine target (aggro+damage+nearness+relative hp)
  for (i=0;i&lt;cjp;i+=1){
    //
    if (point_distance(x,y,pchar[i].x,pchar[i].y) &lt;= acq_range &amp;&amp; (mu_hp[i]&gt;0)){
      //if !collision_line(x,y,pchar[i].x,pchar[i].y,obj_cliffbase_parent,false,true)
      if (!pchar[i].sneaking ){
        //aggro = personal aggro + relative hp + relative nearness + damage dealt
        aggro[i] = (pchar[i].aggro + 100*(1 - (mu_hp[i] div mu_mhp[i])) + 100*(1-(point_distance(x,y,pchar[i].x,pchar[i].y) div acq_range)) + 100*(1-(recent_dmg[i] div (mhp-hitpoints+1))));
        enemy_detected = true;
      }else{
        aggro[i] = 0;
      }
    }else{
      aggro[i] = 0;
    }
  }
  target = noone;
  for (i=0;i&lt;cjp;i+=1){
    if ((aggro[i]&gt;0)&amp;&amp;(target == noone)){
      target = pchar[i];
    }else{
      if (target != noone){
        if (aggro[i]&gt;0) &amp;&amp; (aggro[i] &gt; aggro[target.controlling_player]){
          target = pchar[i];
        }
      }
    }
  }
  if (target != noone){
    //if cooldown is up and enemy is in range
        //{attack;}
    if(npc_abl_ready &amp;&amp; (point_distance(x,y,target.x,target.y) &lt;= npc_abl_range)){
      behavior = 4;
      channel_timer = npc_abl_dur;  
      action_index = 1;
      image_speed = 0;
    }else if (atk_ready &amp;&amp; (point_distance(x,y,target.x,target.y) &lt;= atk_range)){
      behavior = 4;
      channel_timer = atk_dur;  
      action_index = 2;
      image_speed = 0;
    }else{
      mp_potential_step(target.x,target.y,spd,false);//pursue enemy
    }
  }else{
    //lost sight of enemy
    behavior = 0;
  }
  //else 
      //if cooldown is up
          //attack
      //if enemy is moving away
          //chase
      //else
          //if enemy is charging
              //fall back
  break;
case 2: //stalk
  break;
    
case 3: //go home/hide
  break;
    
case 4: //channel ability, etc.
  if(!interrupted){
    channel_timer -= 1;
    
    if(channel_timer == 0){
      event_user(action_index);
      behavior = 1;
      image_speed = 0.25;
    }
  }else{
  
  }
  break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///NPC_STEP
//npc_step();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///pathing
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set sprite stuff

if (xprevious != x &amp;&amp; yprevious != y){ // if moving, have sprite move, else stop
  //change sprite to walking or standing depending on stuff
  dir_move = point_direction(xprevious,yprevious,x,y);
}else{
  //change sprite to standing sprite
}
  if (target == noone){
    dir_face = dir_move;
  }else{
    dir_face = point_direction(x,y,target.x,target.y);
  }
//align sprite to direction
set_image(spr_ind,dir_face);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_projectile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///take damage and knockback

if (global.master &amp;&amp; other.controlling_player == crnt_pnum){
  dmg_sustained = calculate_damage(other.dmg);
  dmg_direction = other.direction;
  npc_damage();
  //destroy bullet
  with (other){//maybe take this out and let bullet decide if it wants to penetrate or explode
    instance_change(obj_projectileAOE,true)
  }
  clearbuffer();
  writebyte(NPC_DMG);
  writebyte(crnt_pnum);
  writeint(npcid);
  writeint(calculate_damage(other.dmg));
  writeint(other.direction);
  slave_sendall();
}else{
  if (other.controlling_player == crnt_pnum){
    clearbuffer();
    writebyte(NPC_DMG);
    writebyte(crnt_pnum);
    writeint(npcid);
    writeint(calculate_damage(other.dmg));
    writeint(other.direction);
    //other stuff, 
    sendmessage(server);
  }
  with (other){
    instance_change(obj_projectileAOE,true);
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack
lastcreated = instance_create(x,y,obj_projectile_eyebite);
projectile_start_position(lastcreated,point_direction(x,y,target.x,target.y));
lastcreated.z = z;
lastcreated.target = target;
lastcreated.direction = point_direction(x,y,target.x,target.y);
lastcreated.speed = 8;
lastcreated.alarm[0] = atk_range/8;
lastcreated.dmg = dmg;
atk_ready = false;
alarm[0] = atk_cd;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Paralysis Wave
for(i=0;i&lt;8;i+=1){
  lastcreated = instance_create(x,y,obj_projectile_paralysiswave);
  lastcreated.direction = (45*i);
  lastcreated.speed = 4;
  lastcreated.alarm[0] = 64/4;
}
npc_abl_ready = false;
alarm[1] = npc_abl_cd;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Stuff
draw_sprite(spr_shadow_small,0,x,y-(base_z/2));
draw_sprite(sprite_index,image_index,x,y-(z/2));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
