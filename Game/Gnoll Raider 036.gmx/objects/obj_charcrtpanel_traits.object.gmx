<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menu_charcrtpanel</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_menupanel_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(textbox){
  instance_destroy();
}
with(hover_border){
  instance_destroy();
}
for(i=0;i&lt;trait_count;i+=1){
  with(btn_array[i mod width, i div width]){
    instance_destroy();
  }
}
for(i=0;i&lt;btn_count;i+=1){
  with(btn_array[(i*2) mod width, (i+trait_count) div width]){
    instance_destroy();
  }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Press Button
if(hovered.btn_index &lt; trait_count){
  if (trait_pts &gt; 0 &amp;&amp; !charcrt_trait[hovered.btn_index]){
    charcrt_trait[hovered.btn_index] = true;
    trait_pts -= 1;
  }else{
    if(charcrt_trait[hovered.btn_index]){
      trait_pts +=1;
      charcrt_trait[hovered.btn_index] = false;
    }
  }
}else{
  switch(hovered.btn_index - trait_count){
  case 0: //cancel
    with(root){
      event_user(2);
    }
    root.active = true;
    instance_destroy();
    break;
  case 1: //done
    if(trait_pts == 0){
      for(i=0;i&lt;trait_count;i+=1){
        root.charcrt_trait[i] = charcrt_trait[i];
      }
      root.crnt_step += 1;
      root.active = true;
      with(root){
        event_user(2);
      }
      instance_destroy();
    }else{
      show_message("You must spend all your trait points to continue.");
    }
    break; 
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define Constants

//Dimensions
width = 3;
height = 5;
//use square formation
for(i=0;i&lt;width;i+=1){
  column_height[i] = height;
}
for(i=0;i&lt;height;i+=1){
  row_width[i] = width;
}

btn_count = 2;
trait_count = 12;
trait_pts = 2;

//Text
btn_labels[0] = "Cancel";
btn_labels[1] = "Done";

//Defaults
for(i=0;i&lt;trait_count;i+=1){
  charcrt_trait[i] = false;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///define texts

title[0] = "Weaponmaster" //Sadistic?
title[1] = "Resilient"
title[2] = "Awareness"
title[3] = "Skilled"
title[4] = "Cunning"
title[5] = "Mobility"
title[6] = "Reckless"
title[7] = "Opportunist"
title[8] = "Ravenous"
title[9] = "Toughness"
title[10] = "Lucky"
title[11] = "Treacherous"

text[0] = "work in progress"
text[1] = "work in progress"
text[2] = "work in progress"
text[3] = "work in progress"
text[4] = "work in progress"
text[5] = "work in progress"
text[6] = "work in progress"
text[7] = "work in progress"
text[8] = "work in progress"
text[9] = "work in progress"
text[10] = "work in progress"
text[11] = "work in progress"

/*
//OLD JUNK, keep around for reference just until we finish this menu
instance_create(42,50,obj_charcrtbtn_spiritfavored)
instance_create(74,50,obj_charcrtbtn_stealthy)
instance_create(106,50,obj_charcrtbtn_veteran)
instance_create(138,50,obj_charcrtbtn_adept)
instance_create(42,82,obj_charcrtbtn_alphastatus)
instance_create(74,82,obj_charcrtbtn_predator)
instance_create(106,82,obj_charcrtbtn_alacrity)
instance_create(138,82,obj_charcrtbtn_denguard)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create buttons

textbox = instance_create(x+384,y+96,obj_btn);
textbox.sprite_index = spr_textbox_112x32;

for(i=0;i&lt;trait_count;i+=1){
  lastcreated = instance_create(x+64+96*(i mod width),y+64+96*(i div width),obj_btn);
  lastcreated.sprite_index = spr_charcrtbtn_traits;
  lastcreated.image_index = i;
  lastcreated.image_speed = 0;
  lastcreated.btn_column = i mod width;
  lastcreated.btn_row = i div width;
  lastcreated.btn_index = i;
  lastcreated.border_sprite = spr_selection_48x48;
  btn_array[i mod width, i div width] = lastcreated;
}

for(i=0;i&lt;btn_count;i+=1){
  lastcreated = instance_create(x+64+128*((i+trait_count) mod width),y+64+96*((i+trait_count) div width),obj_btn);
  lastcreated.text = btn_labels[i]
  lastcreated.btn_column = (i+trait_count) mod width;
  lastcreated.btn_row = (i+trait_count) div width;
  lastcreated.btn_index = i+trait_count;
  lastcreated.border_sprite = spr_selection_96x32;
  btn_array[(i) mod width, (i+trait_count) div width] = lastcreated;
  btn_array[(i+1) mod width, (i+trait_count) div width] = lastcreated;
}

hovered = btn_array[0,0];
hover_border = instance_create(hovered.x,hovered.y,obj_selection);
hover_border.sprite_index = hovered.border_sprite;
hover_border.image_index = 0;
hover_border.image_speed = 0;

io_clear2();
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Stuff

draw_self();


draw_text(textbox.x+16,textbox.y+16,"Points Remaining: "+ string(trait_pts))

if (hovered.btn_index &lt; trait_count){
    draw_set_font(font0);
    draw_set_color(c_white);
    draw_text(textbox.x+16,textbox.y+32,title[hovered.btn_index]);
    draw_text_ext(textbox.x+16,textbox.y+64,text[hovered.btn_index],12,512);
}
//draw_selections
for(i=0;i&lt;trait_count;i+=1){
  draw_sprite(spr_border_48x48,1,btn_array[i mod width, i div width].x,btn_array[i mod width, i div width].y);
  if(charcrt_trait[btn_array[i mod width, i div width].btn_index]){
    draw_sprite(spr_selection_48x48,1,btn_array[i mod width, i div width].x,btn_array[i mod width, i div width].y);
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
