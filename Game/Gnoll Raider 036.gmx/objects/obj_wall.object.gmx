<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mask_iso64x32</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_cell_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clean Up Tiles
/*
for(i=0;i&lt;4;i+=1){
  tile_delete(tile[i]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (x &gt; view_xview &amp;&amp; x &lt; view_xview+view_wview &amp;&amp; y &gt; view_yview &amp;&amp; y &lt; view_yview+view_hview){
  visible = true;
}else{
  visible = false;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_projectile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_change(obj_projectileAOE,true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Isomorphic Tile Render
var EE,NE,NN,NW,WW,SW,SS,SE,xpos,ypos,w,h,tileset_bottom,tileset_top;
tileset_bottom = crnt_dungeon.tileset.tileset_bottom;
tileset_top = crnt_dungeon.tileset.tileset_top;
/*
EE = place_meeting(x+64,y,obj_wall) || place_meeting(x+64,y,obj_door);
NE = place_meeting(x+32,y-16,obj_wall)|| place_meeting(x+32,y-16,obj_door);
NN = place_meeting(x,y-32,obj_wall)|| place_meeting(x,y-32,obj_door);
NW = place_meeting(x-32,y-16,obj_wall)|| place_meeting(x-32,y-16,obj_door);
WW = place_meeting(x-64,y,obj_wall)|| place_meeting(x-64,y,obj_door);
SW = place_meeting(x-32,y+16,obj_wall)|| place_meeting(x-32,y+16,obj_door);
SS = place_meeting(x,y+32,obj_wall)|| place_meeting(x,y+32,obj_door);
SE = place_meeting(x+32,y+16,obj_wall)|| place_meeting(x+32,y+16,obj_door);

w = 32;
h = 48;

//Create Bottom Left Quadrant
xpos = 0;
ypos = 0;

if (!SW){
  if (WW || SS){
    if(SS){
      xpos += w;
      if(!WW){
        if(NW){
          ypos += h;
        }else{
          ypos += h*2;
        }
      }
    }else{
      ypos += h;
      if(!SE){
        ypos += h;
      }
    }
  }else{
    ypos += 3*h;
    if(SE){
      ypos += h;
    }
    if(NW){
      xpos += w;
    }
  }
}
tile[0] = tile_add(tileset_bottom,xpos,ypos,w,h,x,y+16,(room_height-y));

//Create Bottom Right Quadrant
xpos = 2*w;
ypos = 0;

if (!SE){
  if (EE || SS){
    if(SS){
      xpos += w;
      if(!EE){
        if(NE){
          ypos += h;
        }else{
          ypos += h*2;
        }
      }
    }else{
      ypos += h;
      if(!SW){
        ypos += h;
      }
    }
  }else{
    ypos += 3*h;
    if(SW){
      ypos += h;
    }
    if(NE){
      xpos += w;
    }
  }
}
tile[1] = tile_add(tileset_bottom,xpos,ypos,w,h,x+32,y+16,(room_height-y));

//draw top
w = 32;
h = 16;

//Create Top Left Quadrant
xpos = 0;
ypos = 0;


if(!NW){
  if(NE){
    xpos += w;
  }else{
    ypos+= h;
    if(!NN){
      xpos += w;
    }
    if(!WW){
      ypos += h;
    }
  }
}

tile[2] = tile_add(tileset_top,xpos,ypos,w,h,x,y,(room_height-y));

//Create Top Right Quadrant
xpos = 2*w;
ypos = 0;

if(!NE){
  if(NW){
    xpos += w;
  }else{
    ypos += h;
    if(!NN){
      xpos += w;
    }
    if(!EE){
      ypos += h;
    }
  }
}

tile[3] = tile_add(tileset_top,xpos,ypos,w,h,x+32,y,(room_height-y));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var w,h,xpos,ypos;
w = 32;
h = 48;
//Create Bottom Left Quadrant

xpos = 0;
ypos = 0;
draw_sprite_part(spr_isobot,0,xpos,ypos,w,h,x,y);
xpos = 0;
ypos = 0;
draw_sprite_part(spr_isobot,0,xpos,ypos,w,h,x+32,y+16);
xpos = 0;
ypos = 0;
draw_sprite_part(spr_isotop,0,xpos,ypos,w,h,x,y);
xpos = 0;
ypos = 0;
draw_sprite_part(spr_isotop,0,xpos,ypos,w,h,x+32,y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
