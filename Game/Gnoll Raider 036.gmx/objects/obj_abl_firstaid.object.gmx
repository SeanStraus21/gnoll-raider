<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_abl_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define Ability
title = "First Aid";
max_level = 1;

//graphics (icon)
icon = spr_charcrtbtn_skills;
image = 15;

//Text
tooltip[0] = "Bandage an ally so thoroughly as to nullify the effects of an axe to the lung.";

description[0] = "Bandage an ally so thoroughly as to nullify the effects of an axe to the lung.";

//general stats
for(i=0i&lt;max_level;i+=1){
  //general stats
  base_cost[i] = 3+i; //base energy cost
  base_cd[i] = 2-(i*0.2); //base cooldown in seconds
  
  //specific stats
  heal_power[i] = 2 //amount of damage healed per second
  duration[i] = 4+i;//time in seconds the spell lasts after casting
  range[i] = 96;//minimum distance of target
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Slave Receive Firstaid
p_target = readbyte();//readtarget
mu_sklpwr = readint();//read power
mu_ep[sid] = readint();//read energy
target = pchar[p_target];
lastcreated = instance_create(target.x,target.y,obj_effect_heal);//effect
lastcreated.target = target;//set effect target
lastcreated.pwr = mu_sklpwr;//set effect text
mu_hp[target.controlling_player] += mu_sklpwr; //heal mu_hp
if (mu_hp[p_target] &gt; mu_mhp[p_target]){
  mu_hp[p_target] = mu_mhp[p_target];
}
if (sid == crnt_pnum){ //if receiving slave is original caster
  for(i=0;i&lt;5;i+=1){//set cooldown
    if (abl_slot[i] == 15){
      abl_cd[i] = 0;
      obj_control.alarm[i] = ds_list_find_value(ds_list_find_value(ability_array[abl_index],2),abl_lvl[i]);
      break;
    }
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Master Handle Firstaid
p_target = readbyte();
mu_sklpwr = readint();
mu_sklcost = readint();
target = pchar[p_target];
//check validity
if (mu_ep[sid] &gt;= mu_sklcost) &amp;&amp; (mu_hp[p_target] &gt; 0){
  lastcreated = instance_create(target.x,target.y,obj_effect_heal);
  lastcreated.target = target;
  lastcreated.pwr = mu_sklpwr;
  mu_hp[p_target] += mu_sklpwr;
  if (mu_hp[p_target] &gt; mu_mhp[target.controlling_player]){
    mu_hp[p_target] = mu_mhp[p_target];
  }
  mu_ep[sid] -= mu_sklcost;
  //send data to slaves: abl_slot,sid,target,updated ep/epcost, and skill data
  clearbuffer();
  writebyte(MU_MAG);
  writebyte(sid);
  writebyte(abl_index);
  writebyte(p_target);
  writeint(mu_sklpwr);
  writeint(mu_ep[sid]);
  slave_sendall();
}else{//DEBUG
  lastcreated = instance_create(0,0,obj_debugger);
  lastcreated.text = "Not enough Mana || Target is Dead";
}//DEBUG

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cast First Aid
if (mu_ep[crnt_pnum] &gt;= base_cost){
  target = instance_furthest(x,y,obj_gnoll);
  for(i=0;i&lt;cjp;i+=1){//find target
    if (i != crnt_pnum){
      if ((mu_hp[i] &gt; 0) &amp;&amp; (mu_hp[i] &lt; mu_mhp[i]) &amp;&amp; (point_distance(x,y,pchar[i].x,pchar[i].y) &lt;= point_distance(x,y,target.x,target.y))){
        target = pchar[i];
      }
    }
  }
  if (target == id || distance_to_point(target.x,target.y) &gt; base_rng){
    target = id;//if no other valid targets were found, heal self
  }
  if (mu_hp[target.controlling_player] &lt; mu_mhp[target.controlling_player]){
    if (global.master){
      //perform events
      lastcreated = instance_create(target.x,target.y,obj_effect_heal);
      lastcreated.target = target;
      lastcreated.pwr = base_pwr;
      mu_hp[target.controlling_player] += base_pwr;
      if (mu_hp[target.controlling_player] &gt; mu_mhp[target.controlling_player]){
        mu_hp[target.controlling_player] = mu_mhp[target.controlling_player];
      }
      mu_ep[crnt_pnum] -= base_cost;
      abl_cd[abl_index] = 0;
      root.alarm[0] = base_cd;
      //send data to slaves: abl_slot,sid,target,updated ep/epcost, and skill data
      clearbuffer();
      writebyte(MU_MAG);
      writebyte(crnt_pnum);
      writebyte(22);
      writebyte(target.controlling_player);
      writeint(base_pwr);
      writeint(mu_ep[crnt_pnum]);
      slave_sendall();
    }else{
      //query master
      clearbuffer();
      writebyte(MU_MAG);
      writebyte(crnt_pnum);
      writebyte(abl_index);
      writebyte(target.controlling_player);
      writeint(base_pwr);
      writeint(base_cost);
      sendmessage(server);
    }
  }else{
    lastcreated = instance_create(x,y,obj_fltext);
    lastcreated.text = "There aren't any injured people nearby...";
    lastcreated.alarm[0] = 30;
    lastcreated.target = pchar[crnt_pnum];
  }
}else{
  lastcreated = instance_create(x,y,obj_fltext);
  lastcreated.text = "Too Tired...";
  lastcreated.alarm[0] = 30;
  lastcreated.target = pchar[crnt_pnum];
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Generate Description

description = "Lather your weapons with a dangerous toxin. Enemies hit by your next attack will be poisoned and take " + string(damage[0]) + " damage every second for " +string(duration[0])+ " seconds.";

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
