<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>5</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set initial variables

globalvar pname, cjp, ready;
initiated = false;
cjp = 0;
statuschanged = false;

for(i=0;i&lt;8;i+=1){
  pname[i] = "";
  //ptext[i] = '';
  ready[i] = false;
  mu_spr[i] = 0;
  mu_icon[i] = 0;
}
global.returning = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Send Join Info to Master
clearbuffer();
writebyte(SLAVE_ID);
sendmessage(server);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Receive messages from the master


var packet;
packet = readbyte();// Use the packet id to decide how to handle the message

switch(packet){
case SLAVE_ID://Welcome to the Session packet
  if(!initiated){
  cjp = readint();
  for(i=0;i&lt;cjp;i+=1){
    pname[i] = readstring();
    //ptext[i] = readstring();
    //playerarray[i] = pnum[i],pname[i], etc.
  }
  crnt_pnum = cjp;
  cjp += 1;
  initiated = true;
  }
  break;
  
case MASTER_DROP://Master has disconnected
  // send player back to join_lobby
  show_message_menu("Host has disconnected");
  return_from = 1;
  break;
case MLOBBY_ID:// A new client position has been updated
  cjp = readint()
  for(i=0;i&lt;cjp;i+=1){
    pnum[i] = readint();
    pslot[i] = readint();
    ready[i] = readbyte();
    pname[i] = readstring();
    mu_spr[i] = readbyte();
    mu_icon[i] = readbyte();
    mu_mhp[i] = readint();
    mu_hp[i] = mu_mhp[i];
    mu_mep[i] = readint();
    mu_ep[i] = mu_mep[i];
    //ptext[i] = readstring()
  }
  break;
case NEXT_ROOM://Game Start
  roomprevious = room_lobby;
  start_game();
  break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Slave Popups
switch(return_from){
case 0:
  break;
case 1:
  network_destroy(server);
  with(obj_slobbycontrol){
    instance_destroy();
  }
  global.returning = false;
  if (room == room_lobby){
    room_goto(room_multiplayermenu);
  }else{
    global.roomprevious = room_charactermain;
  }
  break;
case 2:
  break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///send drop information to master

clearbuffer();
writebyte(SLAVE_DROP);
writebyte(crnt_pnum);
sendmessage(server);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
