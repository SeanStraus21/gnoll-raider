<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="4" ename="obj_gnoll">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///declare readiness to travel
lastcreated = instance_create(x,y,obj_ready_portal);
lastcreated.target_a = id;
lastcreated.target_b = other;
if (crnt_pnum = controlling_player){
  nextroom_id = other.destination;
  clearbuffer();
  writebyte(NEXT_ROOM);
  writebyte(crnt_pnum);
  writeint(other.destination); //send destination (no longer via portal type, check security)
  writeint(other.destination_x);
  writeint(other.destination_y);
  if (global.master){
    mu_portal[crnt_pnum] = other.portal_id;
    allclear = true; //check if everyone is on the platform
    for (i=0;i&lt;cjp;i+=1){
      if (mu_hp[i]&gt;0 &amp;&amp; mu_portal[i] != other.portal_id){
        allclear = false;
      }
    }
    writebyte(allclear);
    slave_sendall();
    if (allclear){
      //reset stuff
      allclear = false;
      for (i=0;i&lt;cjp;i+=1){
        mu_portal[i] = -1;
      }
      //if single player, just go without sending a packet
      if (cjp == 1){
        global.startx = other.destination_x;
        global.starty = other.destination_y;
        roomprevious = room_id;
        room_goto(room_index[other.destination]);
      }
    }
  }else{
    writeint(other.portal_id);
    sendmessage(server);
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
