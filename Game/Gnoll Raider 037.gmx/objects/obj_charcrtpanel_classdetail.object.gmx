<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menu_charcrtpanel</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>7</depth>
  <persistent>0</persistent>
  <parentName>obj_charcrtpanel_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clean Up
with (textbox){
  instance_destroy();
}
with (hover_border){
  instance_destroy();
}

for(i=0;i&lt;btn_count;i+=1){
  with(btn_array[i,0]){
    instance_destroy();
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Process Popup Window Results
switch(return_from){
case 0:
  break;
case 1:
  if (answer){
    root.charcrt_class = class_id;//set class
    root.charcrt_mhp = class_mhp[class_id];
    root.charcrt_mep = class_mep[class_id];
    root.charcrt_weapon = class_wpn[class_id];
    root.charcrt_atk = wpnatk[class_wpn[class_id]];
    root.charcrt_atkspd = wpnatkspd[class_wpn[class_id]];
    root.charcrt_rng = wpnrng[class_wpn[class_id]];
    //root.charcrt_def = 0;
    //root.charcrt_spd = 5;
    for(i=0;i&lt;4;i+=1){
      abl_slot[i] = starting_ability[class_id,i];
      abl_lvl[abl_slot[i]] = 0;
    }
    root.crnt_step += 1;
    root.active = true;
    with(root){
      event_user(3);
    }
    instance_destroy();
  }
  break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Press Button

switch(hovered.btn_index){
  case 0://back to class selection
    active = false;
    root.crnt_panel = instance_create(x,y,obj_charcrtpanel_class);
    root.crnt_panel.root = root;
    with root.crnt_panel{
      event_user(0);
    }
    root.crnt_panel.hovered.btn_index = class_id;
    instance_destroy();
    break;
  case 1://choose this class;
    //if the player has already chosen a class, ask for confirmation
    if (root.charcrt_class != -1 &amp;&amp; root.charcrt_class != class_id){
      answer = show_question_menu("You are about to change classes. This will reset any changes you have made to skills and traits. Do you wish to continue?");
      return_from = 1;
    }else{
      root.charcrt_class = class_id;//set class
      root.charcrt_mhp = class_mhp[class_id];
      root.charcrt_mep = class_mep[class_id];
      root.charcrt_weapon = class_wpn[class_id];
      root.charcrt_atk = wpnatk[class_wpn[class_id]];
      root.charcrt_atkspd = wpnatkspd[class_wpn[class_id]];
      root.charcrt_rng = wpnrng[class_wpn[class_id]];
      //root.charcrt_def = 0;
      //root.charcrt_spd = 5;
      for(i=0;i&lt;4;i+=1){
        abl_slot[i] = starting_ability[class_id,i];
        abl_lvl[abl_slot[i]] = 0;
      }
      root.crnt_step += 1;
      root.active = true;
      with(root){
        event_user(3);
      }
      instance_destroy();
    }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define Text and Constants

//define dimensions
width = 2;
height = 1;
btn_count = 2;

//square formation
for(i=0;i&lt;width;i+=1){
column_height[i] = height;
}
for(i=0;i&lt;height;i+=1){
row_width[i] = width;
}


//define text
btn_labels[0] = "Cancel";
btn_labels[1] = "Choose";

class_name[0] = "Skulker";
class_name[1] = "Raider";
class_name[2] = "Hunter";
class_name[3] = "Witch Doctor";
class_name[4] = "Berserker";
class_name[5] = "Warlock";
//class_name[6] = "Clan Guard"/"Blackguard"
//class_name[7] = "Dark Priest"

class_description[0] = "Skulkers are swift-footed scouts and sneaky infiltrators, who serve their clan through cunning and stealth. Drawn from the ranks of the scavenger castes, skulkers are scrappy and resourceful, and are able to hold their own in a fight. However, their true strength lies in their ability to outwit and outmaneuver their foes. Skulkers lack the lethal combat prowess of hunters, but compensate with a greater capacity for avoiding danger and exploiting weaknesses. When accompanying raiding parties, Skulkers act as supporting units, lying in wait for an enemy to let his guard down.";
class_description[1] = "Raiders form the backbone of a gnoll warrior clan. Though they are kept around as a sort of standing army, raiders do most of their fighting in smaller engagements. Versatile and cunning, raiders are expert skirmishers and know there are many ways to win a fight. As adaptable and reliable warriors, raiders usually form the core of a well-balanced warband. Depending on their allies, raiders may provide either a solid wall of defense or a sustained assault, all while drawing the attention of foes away from more fragile troops.";
class_description[2] = "The Hunters represent the most elite of all gnoll warriors. They must be both cunning and powerful, for they are tasked with pursuing the enemies of the clan through Waste or Jungle, perhaps for weeks on end, and with only as much backup as will not hinder mobility and secrecy. Hunters are incredibly resourceful trackers and ferocious warriors. However, their focus on mobility and offense leaves them vulnerable, and hunters only ever wear the lightest armor. When raiding or at war, hunters form small but heavy-hitting teams, either as stealth squads supported by skulkers, or supplementing the offensive capabilities of larger, more varied groups. Hunters focus on hitting hard and fast, relying on mobility to compensate for poor defense.";
class_description[3] = "Zahukiki, or Witchdoctors, are intermediaries between their clan and the spirits around them. Healers, mystics, sages and priests, they use a combination of ancestral lore, mystical knowledge, and elaborate guesswork to aid their fellow gnolls. While Zahukiki are not warriors, they often accompany zakasi armies, using their magic to embolden their allies and confound their enemies. They are especially valued for their skill with medicine, and a single Zahukiki field medic can make the difference between failure and success for a small warband. In these troubled times, it is not uncommon for Zahukiki to bother to acquire some proficiency with weapons, though they cannot endure heavy armor.";
class_description[4] = "Only the strongest, toughest, and most psychologically unstable Marauders can aspire to the rank of Reaver. Those who do form the elite shocktroops of the clan, charging heedlessly into battle with bestial savagery. Berserkers are front-line combatants who know no subtlety. While in the midst of battle-rage, they can shrug off wounds that would kill a lesser gnoll. While engaged in melee, they show almost supernatural resilience. However, when the fury subsides, these pyschotic hyena-men become vulnerable. While traveling with smaller warbands, berserkers use their great strength to disrupt and distract enemies, and try to draw attention away from more subtle allies. Berserkers are more impressive combatants than raiders, but provide less reliable defense. Similarly, berserkers can achieve impressive speed while charging, but lack the sustained maneuverability of hunters.";
class_description[5] = "Simultaneously shunned and revered, Warlocks represent the darker side of the Zahukiki. The strongest spirits are always those whose interests lie parallel with the petty concerns of mortals, and the lure of greater power may be strong enough to draw an ambitious Zahukiki to seek out less wholesome companions, and to make very unpleasant bargains. Though the life of a sorcerer is essentially anti-social, it is not uncommon for chieftains to hire local warlocks in times of trouble. While it is dangerous to attract the attention of evil spirits, the sheer firepower they offer is something any gnoll can respect. When a warlock accompanies a gnoll warband, he brings with him awesome destructive power, but this power comes at a price. a Warlock's power is easily drained, and once depleted, is virtually incapable of protecting himself. physically vulnerable, warlocks must be well protected by their allies. But beware, warlocks are notoriously treacherous.";

class_equipment[0] = "Throwing knives are popular amongst gnoll thieves. They can be used quickly and at a distance, yet are still easily concealed. Knives and daggers have less range than crossbows and deal less damage, but do not need to be reloaded. Skulkers wear light armor.";
class_equipment[1] = "The curved Zakasi scimitar is standard equipment amongst the desert clans. lightweight but effective, they are built for an aggressive, slashing combat style. Sword type weapons are strictly melee, but affect a large area. Raiders wear medium armor";
class_equipment[2] = "Crossbows are favored by gnoll hunters for their range and lethality. While these weapons are powerful, they must be reloaded after each shot. this limitation favors hit and run tactics. Hunters wear light armor";
class_equipment[3] = "Spears are simple but effective weapons, which can be thrown or used as polearms. They are popular with all gnoll warriors, as well as those who cannot be bothered to master the scimitar. Witchdoctors wear medium armor";
class_equipment[4] = "The Zakasi flail is a difficult weapon to master, but can be swung in large arcs to deal impressive damage, while having longer reach than swords. flails and scourges are popular amongst veteran raiders, and are the favored weapons of berserkers. Berserkers wear heavy armor.";
class_equipment[5] = "Spears are simple but effective weapons, which can be thrown or used as polearms. They are popular with all gnoll warriors, as well as those who cannot be bothered to master the scimitar. Warlocks wear no armor";

class_abilities[0] = "Apply Poison, Shadowmeld, Crippling Strike, Reflexes, Lay Trap";
class_abilities[1] = "Bone Breaker, Dodge, Power Attack, Provoke, ";
class_abilities[2] = "Reflexes, grievous strike, Dodge, Haste, Debilitate";
class_abilities[3] = "First Aid, Surgery, Antidote, Adrenaline, Resurrection";
class_abilities[4] = "Charge, Rage, Whirlwind Attack, Invincibility";
class_abilities[5] = "Withering Hex, Maelstrom,";

class_image[0] = spr_btn_96x32;
class_image[1] = spr_btn_96x32;
class_image[2] = spr_btn_96x32;
class_image[3] = spr_btn_96x32;
class_image[4] = spr_btn_96x32;
class_image[5] = spr_btn_96x32;

//Class Stats
class_mhp[0] = 30;
class_mhp[1] = 50;
class_mhp[2] = 40;
class_mhp[3] = 40;
class_mhp[4] = 60;
class_mhp[5] = 20;

class_mep[0] = 25;
class_mep[1] = 25;
class_mep[2] = 25;
class_mep[3] = 25;
class_mep[4] = 25;
class_mep[5] = 25;

class_wpn[0] = 3;
class_wpn[1] = 0;
class_wpn[2] = 4;
class_wpn[3] = 2;
class_wpn[4] = 1;
class_wpn[5] = 2;

//skulker abilities
starting_ability[0,0] = 0;
starting_ability[0,1] = 1;
starting_ability[0,2] = 2;
starting_ability[0,3] = 3;

//raider abilities
starting_ability[1,0] = 0;
starting_ability[1,1] = 1;
starting_ability[1,2] = 2;
starting_ability[1,3] = 3;

//hunter abilities
starting_ability[2,0] = 0;
starting_ability[2,1] = 1;
starting_ability[2,2] = 2;
starting_ability[2,3] = 3;

//witchdoctor abilities
starting_ability[3,0] = 0;
starting_ability[3,1] = 1;
starting_ability[3,2] = 2;
starting_ability[3,3] = 3;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Panel

textbox = instance_create(x+64,y+64,obj_btn);
textbox.sprite_index = spr_textbox_112x32;

for(i=0;i&lt;btn_count;i+=1){
  lastcreated = instance_create(x+80+128*(i),y+384,obj_btn);
  lastcreated.sprite_index = class_image[i];
  lastcreated.btn_column = i;
  lastcreated.btn_row = 0;
  lastcreated.btn_index = i;
  lastcreated.text = btn_labels[i];
  lastcreated.border_sprite = spr_selection_96x32;
  btn_array[i mod width, i div width] = lastcreated;
}

hovered = btn_array[1,0];
hover_border = instance_create(hovered.x,hovered.y,obj_selection);
hover_border.sprite_index = hovered.border_sprite;
hover_border.image_index = 0;
hover_border.image_speed = 0;
hover_border.depth = depth-2;

io_clear2();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw text for hovered class
draw_self();
draw_set_font(font0);
draw_set_color(c_white);
//draw text
draw_text(textbox.x,textbox.y,class_name[class_id]);
draw_text_ext(textbox.x,textbox.y+64,class_description[class_id],12,384);
draw_text(textbox.x,textbox.y+192,"Class Abilities:");
draw_text(textbox.x,textbox.y+202,class_abilities[class_id]);
draw_text(textbox.x,textbox.y+224,"Starting Equipment:");
draw_text_ext(textbox.x,textbox.y+234,class_equipment[class_id],12,384);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
