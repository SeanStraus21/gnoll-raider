<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Process Input
if(!active){
  exit;
}
//press enter
if(confirm_btn){
  event_user(1);
  io_clear2();
}
if(cancel_btn){
  event_user(3);
  io_clear2();
}
//check arrowkeys

//move left
if(arrow_left){
  if (hovered.btn_column &gt; 0){
    hovered = btn_array[hovered.btn_column - 1,hovered.btn_row];
  }else{
    hovered = btn_array[row_width[hovered.btn_column]-1,hovered.btn_row];
  }
  hover_border.sprite_index = hovered.border_sprite;
  hover_border.x = hovered.x;
  hover_border.y = hovered.y;
}

//move right
if(arrow_right){
  var checked;
  
  //for dealing with objects that take up multiple slots //while hovered is the same as the next thing
  checked = btn_array[(hovered.btn_column + 1) mod (row_width[hovered.btn_row]),hovered.btn_row];
  for(i=2; i&lt;row_width[hovered.btn_row] &amp;&amp; hovered == checked;i+=1){
    checked = btn_array[(hovered.btn_column + i) mod (row_width[hovered.btn_row]),hovered.btn_row];
  }
  hovered = checked;
  hover_border.sprite_index = hovered.border_sprite;
  hover_border.x = hovered.x;
  hover_border.y = hovered.y;
}

//move up
if(arrow_up){
  if (hovered.btn_row &gt; 0){
    hovered = btn_array[hovered.btn_column,hovered.btn_row - 1];
  }else{
    hovered = btn_array[hovered.btn_column,column_height[hovered.btn_column] - 1];
  }
  hover_border.sprite_index = hovered.border_sprite;
  hover_border.x = hovered.x;
  hover_border.y = hovered.y;
}

//move down
if(arrow_down){
  if (hovered.btn_row &lt; column_height[hovered.btn_column]-1){
    hovered = btn_array[hovered.btn_column,hovered.btn_row + 1];
  }else{
    hovered = btn_array[hovered.btn_column,0];
  }
  hover_border.sprite_index = hovered.border_sprite;
  hover_border.x = hovered.x;
  hover_border.y = hovered.y;
}

if(arrow_right || arrow_left || arrow_down || arrow_up){
  io_clear2();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
