<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menu_charcrt</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Multiplayer Stuff
if(!global.returning){
  if(global.master){
    instance_create(0,0,obj_mlobbycontrol);
  }else{
    instance_create(0,0,obj_slobbycontrol);
  }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define Variables
global.roomprevious = room_lobby;
if (global.master){
  width = 1;
  height = 3;
  
  btn_labels[0] = "Choose Character";
  btn_labels[1] = "Start";
  btn_labels[2] = "Cancel";
}else{
  width = 1;
  height = 2;
  
  btn_labels[0] = "Choose Character";
  btn_labels[1] = "Disconnect";

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Menu

for(i=0;i&lt;height;i+=1){
  lastcreated = instance_create(x+192,y+128+(i*32),obj_btn);
  lastcreated.btn_column = 0;
  lastcreated.btn_row = i;
  btn_array[0,i] = lastcreated;
  lastcreated.text = btn_labels[i];
  lastcreated.btn_index = i;
  lastcreated.empty = false;
  lastcreated.border_sprite = spr_selection_96x32;
  lastcreated.depth = depth -1;
}

hovered = btn_array[0,0];
hover_border = instance_create(hovered.x,hovered.y,obj_selection);
hover_border.sprite_index = hovered.border_sprite;
hover_border.image_index = 0;
hover_border.image_speed = 0;
hover_border.depth = depth-2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Process Input

if(confirm_btn){//press enter
  event_user(1);
  io_clear2();
}else{  //check arrowkeys
  var xpos, ypos;
  xpos = hovered.btn_column;
  ypos = hovered.btn_row;
  
  //move left
  if(arrow_left){
    if (xpos &gt; 0){
      xpos -= 1;
    }else{
      xpos = width-1;
    }
    if(xpos == width-1){
      ypos = 0;
    }else{
      for(i=xpos;btn_array[i,ypos].empty;i+=0){
        if (i &gt; 0){
          i -= 1;
        }else{
          i = width-1;
        }
      }//scroll across the row to find the next non-empty space
      xpos = i;
    }
    io_clear2();
  }
  
  //move right
  if(arrow_right){
    xpos = (xpos+1) mod width;
    if(xpos == width-1){
      ypos = 0;
    }else{
      for(i=xpos;btn_array[i,ypos].empty;i=(i+1)mod width){}//scroll across the row to find the next non-empty space
      xpos = i;
    }
    io_clear2();
  }
  
  //move up
  if(arrow_up){
    if (xpos == width-1 || ypos &gt; 0){
     if (ypos &gt; 0){
        ypos -= 1;
      }else{
        ypos = height-1;
      }
      for(i=ypos;btn_array[xpos,i].empty;i+=0){
        if (i &gt; 0){
          i -= 1;
        }else{
          i = height-1;
        }
      }//scroll up the column to find the next non-empty space
      ypos = i; 
    }
    io_clear2();
  }
  
  //move down
  if(arrow_down){
    if (xpos == width-1 || ypos &lt; height-1){
     if (ypos &lt; height-1){
        ypos = (ypos+1)mod height;
        for(i=ypos;btn_array[xpos,i].empty;i=(i+1)mod height){}//scroll down the column to find the next non-empty space
        ypos = i; 
      }
    }
    io_clear2();
  }
  
  hovered = btn_array[xpos,ypos];
  hover_border.sprite_index = hovered.border_sprite;
  hover_border.x = hovered.x;
  hover_border.y = hovered.y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.master</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>true</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Master Press Button
switch(hovered.btn_index){
case 0://Choose Character
  room_goto(room_charactermain);
  break;
case 1://Start Game
  allready = true;
  for(i=0;i&lt;cjp;i+=1){
    if (!ready[i]){
      allready = false;
      break;
    }
  }
  if (allready){
    disconnected = true;
    event_user(0);
    network_destroy(temp_socket);
    clearbuffer();
    writebyte(NEXT_ROOM);
    slave_sendall();
    room_origin = room;
    start_game();
  }else{
    show_message_menu("one or more player(s) are not ready yet");
  }
  break;
    
case 2: //Cancel
  disconnected = true;
  event_user(0);
  network_destroy(temp_socket);
  clearbuffer();
  writebyte(MASTER_DROP);
  slave_sendall();
  network_destroy(server);//close the server socket
  global.multiplayer = false;
  with(obj_mlobbycontrol){
    instance_destroy();
  }
  room_goto(room_multiplayermenu);
  break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>421</id>
        <kind>3</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Slave Press Button
switch(hovered.btn_index){
case 0:
  room_goto(room_charactermain);
  break;
case 1:
  clearbuffer();
  writebyte(SLAVE_DROP);
  writebyte(crnt_pnum)
  sendmessage(server);
  with(obj_slobbycontrol){
    instance_destroy();
  }
  global.returning = false;
  room_goto(room_multiplayermenu);
  break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Stuff
draw_set_color(c_white);
draw_set_font(font0);

draw_self();

for(i=0;i&lt;8;i+=1){
  if (ready[i] &amp;&amp; i &lt;cjp){
    draw_sprite(spricon[mu_spr[i]],mu_icon[i],x+64,y+140+(48*i));
    draw_text(x+112,y+128+(48*i),pname[i]);
    draw_text(x+112,y+128+(48*i),pname[i]);
  }
draw_sprite(spr_border_48x48,0,x+112,y+128+(48*i));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
