<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_savestation</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>obj_ally_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialization
npcid = npc_create();

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Declare Dialogue Variables
npc_dialogue[0] = "This is your band's logbook(a.k.a. Save Station). Record Your Progress?";
npc_dialogue[1] = "[You begin to record your latest exploits, preserving them for posterity.]";
npc_dialogue[2] = "[You decline to update the logbook, preferring to allow your most recent adventure to slip quietly into oblivion.]";

pc_dialogue[0] = "Alright, time to update the logbook![Save Game]";
pc_dialogue[1] = "I don't think today's events are worth recording.[Cancel]";

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set variables
npc_name = "Party Log"
conversing = false;
talking = false;
saving = false;

dlg_log = ds_list_create();
dlg_opts = ds_list_create();
dlg_opt_ids = ds_list_create();
hitpoints = 5;
spd = 3;
dir = 270;
npcdef = 1;
npcdefmod = 0;
knockable = true;
snared = false;
stunned = false;
stealthed = false;

//graphics
spr_ind = 1;
portrait = spr_npcportrait_savestation;
portrait_emotion = 0;
frame_num = 2;
portrait_ind = 2;
icon = spr_brgnoll_icon;
image_speed = .10;

//conversation
dlg_over = false;
talk_i = 0;
talk_j = 0;
talk_spd = 2;
talk_char = '';
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///clean up dialogue

end_dialogue(id,dlg_menu);
if (saving) 
    {
    event_perform(ev_other,ev_user1);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start Conversation

//look at speaker
dir = point_direction(x,y,ds_list_find_value(dlg_menu.participants,0).x,ds_list_find_value(dlg_menu.participants,0).y);

//determine opening phrase
ds_list_copy(dlg_log,dialogue_log_append(npc_dialogue[0]));
log_pcount = (ds_list_size(dlg_log) div dlg_menu.logwin_lnum) + ((ds_list_size(dlg_log) mod dlg_menu.logwin_lnum) &gt;0);
//determine starting options
ds_list_clear(dlg_opts);
ds_list_add(dlg_opts,pc_dialogue[0]);
ds_list_add(dlg_opts,pc_dialogue[1]);
//assign retrieval keys
ds_list_clear(dlg_opt_ids);
ds_list_add(dlg_opt_ids,0);
ds_list_add(dlg_opt_ids,1);

talking = true;
talk_spd = 2;
ds_list_clear(dlg_menu.display_log);
ds_list_add(dlg_menu.display_log,"");
alarm[1] = talk_spd;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Save Game
if (cjp == 1)
    {
    save_game(pname[crnt_pnum]);
    lastcreated = instance_create(x,y,obj_fltext_global);
    lastcreated.text = "Game Saved";
    lastcreated.color = c_lime;
    }
else
    {
    if (global.master)//if master, start the save process
        {
        clearbuffer();
        writebyte(MU_SAVE);
        //writebyte(0);//start the saving
        slave_sendall();
        save_game(pname[crnt_pnum]);
        lastcreated= instance_create(x,y,obj_fltext_global)
        lastcreated.text = "Game Saved";
        lastcreated.color = c_lime;
        }
    else //if slave, alert the master to begin the save process
        {
        clearbuffer();
        writebyte(MU_SAVE);
        writebyte(crnt_pnum);
        //writebyte(2);//okay with saving
        sendmessage(server);
        }
    }
saving = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dialogue Click
//Check if this NPC is in a conversation
if conversing == true
    {
    if (dlg_menu.position_x == 0) &amp;&amp; (talking == false) &amp;&amp; !(dlg_over)
        {
        talking = true;
        ds_list_clear(dlg_menu.display_log);
        ds_list_add(dlg_menu.display_log,"");
        dlg_menu.log_ind = 0;
        dlg_menu.log_page = 1;
        switch(ds_list_find_value(dlg_opt_ids,dlg_menu.hovered.key))
            {
            case 0:
                //respond
                dlg_log = dialogue_log_append(npc_dialogue[1]);
                saving = true;
                //end dialogue
                ds_list_clear(dlg_opts);
                talking = true;
                dlg_over = true;
                break;
            
            case 1:
                //respond
                dlg_log = dialogue_log_append(npc_dialogue[2]);
                //end dialogue
                ds_list_clear(dlg_opts);
                talking = true;
                dlg_over = true;
                break;
            }
        log_pcount = (ds_list_size(dlg_log) div dlg_menu.logwin_lnum) + ((ds_list_size(dlg_log) mod dlg_menu.logwin_lnum) &gt;0);
        alarm[1] = talk_spd;
        with dlg_menu
            {
            ds_list_clear(option_objects);
            with obj_menu_dlg_option
                {
                instance_destroy();
                }
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
