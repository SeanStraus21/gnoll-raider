<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menu_charcrt</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>obj_menu_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set variables
globalvar server;
server = -1;
global.returning = false;

line_index = 0;
width = 2;
height = 5;
session_list = ds_map_create();

btn_labels[0] = "Create";
btn_labels[1] = "Join";
btn_labels[2] = "Cancel";

//set alarm to scan pings
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Buttons

//create scrollbuttons
scrollbtn_up = instance_create(x+128,y+160,obj_btn);
scrollbtn_up.sprite_index = spr_btn_arrow_up;
scrollbtn_up.image_index = 1;
scrollbtn_up.image_speed = 0;

scrollbtn_down = instance_create(x+128,y+448,obj_btn);
scrollbtn_down.sprite_index = spr_btn_arrow_down;
scrollbtn_down.image_index = 0;
scrollbtn_down.image_speed = 0;

//create buttons
for(i=0;i&lt;height;i+=1){
  lastcreated = instance_create(x+384,y+192+i*32,obj_btn);
  lastcreated.btn_column = 1;
  lastcreated.btn_row = i;
  btn_array[1,i] = lastcreated;
  if(i&lt;3){
    lastcreated.text = btn_labels[i];
    lastcreated.btn_index = i;
    lastcreated.empty = false;
    lastcreated.border_sprite = spr_selection_96x32;
  }else{
    lastcreated.empty = true;
  }
}

//create game slots
for(i=0;i&lt;height;i+=1){
  lastcreated = instance_create(x+96,y+192+64*i,obj_btn);
  lastcreated.btn_column = 0;
  lastcreated.btn_row = i;
  btn_array[0,i] = lastcreated;
  lastcreated.btn_index = i+3;
  lastcreated.empty = false;
  lastcreated.sprite_index = spr_gameslot;
  lastcreated.image_speed = 0;
  lastcreated.border_sprite = spr_selection_96x32;
  lastcreated.empty = true;
}

hovered = btn_array[1,0];
hover_border = instance_create(hovered.x,hovered.y,obj_selection);
hover_border.sprite_index = hovered.border_sprite;
hover_border.image_index = 0;
hover_border.image_speed = 0;

selected = noone;
selection_border = instance_create(x,y,obj_selection);
selection_border.sprite_index = noone;
selection_border.image_index = 1;
selection_border.image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create listening port

temp_socket = network_create_server(network_socket_udp,PORT_SLAVE,12);
if (temp_socket &lt; 0){
  show_message_menu("Failed to listen on port");
  waiting_for = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Process Input

if(confirm_btn){//press enter
  event_user(1);
  io_clear2();
}else{  //check arrowkeys
  var xpos, ypos;
  xpos = hovered.btn_column;
  ypos = hovered.btn_row;
  
  //move left
  if(arrow_left){
    if (xpos &gt; 0){
      xpos -= 1;
    }else{
      xpos = width-1;
    }
    if(!btn_array[xpos,0].empty){
      ypos = 0;
    }else{
      xpos = hovered.btn_column;
    }
    io_clear2();
  }
  
  //move right
  if(arrow_right){
    if(!btn_array[(xpos+1)mod width,0].empty){
      xpos = (xpos+1)mod width;
      ypos = 0;
    }
    io_clear2();
  }
  
  //move up
  if(arrow_up){
    if (xpos == width-1 || ypos &gt; 0){
     if (ypos &gt; 0){
        ypos -= 1;
      }else{
        ypos = height-1;
      }
      for(i=ypos;btn_array[xpos,i].empty;i+=0){
        if (i &gt; 0){
          i -= 1;
        }else{
          i = height-1;
        }
      }//scroll up the column to find the next non-empty space
      ypos = i; 
    }else if(line_index &gt; 0){//xpos &lt; width-1 &amp;&amp; ypos &lt;= 0
      //scroll up the page
      line_index -= 1;
      scrollbtn_down.image_index = 0;
      if (line_index == 0){
        scrollbtn_up.image_index = 1;
      }
      event_user(0);
    }
    io_clear2();
  }
  
  //move down
  if(arrow_down){
    if (xpos == width-1 || ypos &lt; height-1){
     if (ypos &lt; height-1){
        ypos = (ypos+1)mod height;
        for(i=ypos;btn_array[xpos,i].empty;i=(i+1)mod height){}//scroll down the column to find the next non-empty space
        ypos = i; 
      }
    }else if(line_index &lt; ds_map_size(session_list)-5){//xpos &lt; width-1 &amp;&amp; ypos &lt;= 0
      //scroll down the page
      line_index += 1;
      scrollbtn_up.image_index = 0;
      if (line_index == ds_map_size(session_list)-5){
        scrollbtn_down.image_index = 1;
      }
      event_user(0);
    }
    io_clear2();
  }
  
  hovered = btn_array[xpos,ypos];
  hover_border.sprite_index = hovered.border_sprite;
  hover_border.x = hovered.x;
  hover_border.y = hovered.y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Listen for Pings
var packet, crnt_ip, crnt_name, disconnected;

//read packet
packet = readbyte();
crnt_name = readstring();
disconnected = readbool();
crnt_ip = ds_map_find_value(async_load,"ip");

//update the slots
event_user(0);
alarm[0] = 30;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Return From Popup Window
switch(return_from){
case 0:
  break;
case 1:
  game_end();
  break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///join, create, or quit
//this needs to connect the player to his selected host
switch(hovered.btn_index){
case 0: //Create
  sound_play(snd_click);
  global.multiplayer = true;
  global.master = true;
  crnt_pnum = 0;
  network_destroy(temp_socket);
  ds_map_destroy(session_list);
  room_goto(room_lobby);
  break;
case 1://Join
  sound_play(snd_click);
  if(selected != noone &amp;&amp; !selected.empty){
    global.master = false;
    server = network_create_socket(network_socket_tcp);//create a socket
    network_connect(server,selected.ip,PORT_MASTER);//try to connect to server
    if (server &lt; 0){
      show_message_menu("Unable to connect to server");
      exit;
    }else{
      global.multiplayer = true;
      network_destroy(temp_socket);
      ds_map_destroy(session_list);
      room_goto(room_lobby);
    }
  }else{
    show_message_menu("You must select a game to join");
  }
  break;
case 2: //Cancel
  sound_play(snd_click);
  global.multiplayer = false;
  network_destroy(temp_socket);
  ds_map_destroy(session_list);
  room_goto(room_mainmenu);
  break;
default: //Select a game
  if(!hovered.empty){
    selected = hovered;
    selection_border.x = selected.x;
    selection_border.y = selected.y;
    selection_border.sprite_index = selected.border_sprite;
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update gameslots
var crnt_key;
crnt_key = ds_map_find_first(session_list);

for(i=0;i&lt;height;i+=1){
  if(i &lt; ds_map_size(session_list)){
    btn_array[0,i].ip = crnt_key;
    btn_array[0,i].text = crnt_key//btn_array[0,i].text = ds_map_find_value(session_list,crnt_key);
    btn_array[0,i].image_index = 1;
    crnt_key = ds_map_find_next(session_list,crnt_key);
    btn_array[0,i].empty = false;
  }else{
    btn_array[0,i].ip = "";
    btn_array[0,i].text = "";
    btn_array[0,i].image_index = 0;
    btn_array[0,i].empty = true;
  }
}
if(selected != noone){
  if(selected.empty){
    selected = noone;
    selection_border.sprite_index = noone;
  }
}
if(hovered.empty){
  hovered = btn_array[0,0]
  hover_border.x = hovered.x;
  hover_border.y = hovered.y;
  hover_border.sprite_index = hovered.border_sprite;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///close connection and free dll

network_destroy(temp_socket);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
