<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>5</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///declare multiplayer variables and open ports

declare_multiplayer_variables();
//create the broadcast port
temp_socket = network_create_socket(network_socket_udp);
if (temp_socket &lt; 0){
  show_message_menu("Failed to listen on port");
  return_from = 1;
}
//create listening port
server = network_create_server(network_socket_tcp,PORT_MASTER,7);
if (server &lt;= 0){
  show_message_menu("Failed to listen on port");
  return_from = 1;
}
disconnected = false;
global.returning = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///send information to currently joined players
/*
these are the things the master needs to tell the players
his texts
the names of the other players
the numbers of the other players
*/

if (cjp &gt; 1){
  if (cjpincreased){
    clearbuffer();
    writebyte(MLOBBY_ID);
    writeint(cjp);
    for(i = 0;i &lt; cjp;i+=1){
      writeint(pnum[i]);
      writeint(pslot[i]);
      writebyte(ready[i]);
      writestring(pname[i]);
      writebyte(mu_spr[i]);
      writebyte(mu_icon[i]);
      writeint(mu_mhp[i]);
      writeint(mu_mep[i]);
      //writestring(textmessage[i])
      //playerarray[i] = pnum[i],pname[i], etc.
    }
    slave_sendall();
    cjpincreased = false;
  }
}     
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///broadcast to computers on network the presence of an available game
if(cjp &lt; 8){
  event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Receive messages from the slaves

var packet;
packet = readbyte();//read the header

// Use the packet id to decide how to handle the message
// inside a switch statement
switch(packet){
case SLAVE_ID://new player has been accepted
  cjpincreased = true;
  clearbuffer();
    writebyte(SLAVE_ID);
    writeint(cjp);
    for(i=0;i&lt;cjp;i+=1){
      writestring(pname[i]);
      //writestring(ptext[i]);
    }
    slave_sendall();
    cjp += 1;
  break;
case SLAVE_DROP:// A connection has been closed with a client
  sid = readbyte();
  for(i=sid;i &lt; cjp;i+=1){   //for instance, less than 4, [IDs 2-3]
    if (i != cjp-1 ){//this way if pnum[2] drops, player 3(4-1=3) 
      pname[i] = pname[i+1]
      pslot[i] = pslot[i+1] //pslot[1] = pslot[2]
      socket[i] = socket[i+1]
      ready[i] = ready[i+1]
      mu_spr[i] = mu_spr[i+1]
      mu_icon[i] = mu_icon[i+1]
      mu_mhp[i] = mu_mhp[i+1]
      mu_mep[i] = mu_mep[i+1]
      //ptext[i] = ptext[i+1]
    }else{
      pname[i] = "";
      ready[i] = false;
      //ptext[i] = ''
    }  
  }
  cjp -= 1;
  cjpincreased = true
  break;
case SLAVE_INFO:
  // update text and position. maybe set something up in case of conflicts
  sid = readbyte();
  pslot[sid] = readint();
  ready[sid] = readbyte();
  pname[sid] = readstring();
  mu_spr[sid] = readbyte();
  mu_icon[sid] = readbyte();
  mu_mhp[sid] = readint();
  mu_hp[sid] = mu_mhp[sid];
  mu_mep[sid] = readint();
  mu_ep[sid] = mu_mep[sid];
  //ptext[i] = readstring()
  cjpincreased = true;
  break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Process Popup Window Results
switch(return_from){
case 0:
  break;
case 1:
  game_end();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Broadcast on LAN

clearbuffer();
writestring("Crazy Monkey Man II");
writebyte(disconnected);
network_send_broadcast(temp_socket,PORT_SLAVE,send_buffer,buffer_tell(send_buffer));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///master drop
disconnected = true;
event_user(0);
clearbuffer();
writebyte(MASTER_DROP);
slave_sendall();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
